/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/animejs/lib/anime.es.js":
/*!**********************************************!*\
  !*** ./node_modules/animejs/lib/anime.es.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * anime.js v3.2.0\n * (c) 2020 Julian Garnier\n * Released under the MIT license\n * animejs.com\n */\n\n// Defaults\n\nvar defaultInstanceSettings = {\n  update: null,\n  begin: null,\n  loopBegin: null,\n  changeBegin: null,\n  change: null,\n  changeComplete: null,\n  loopComplete: null,\n  complete: null,\n  loop: 1,\n  direction: 'normal',\n  autoplay: true,\n  timelineOffset: 0\n};\n\nvar defaultTweenSettings = {\n  duration: 1000,\n  delay: 0,\n  endDelay: 0,\n  easing: 'easeOutElastic(1, .5)',\n  round: 0\n};\n\nvar validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective', 'matrix', 'matrix3d'];\n\n// Caching\n\nvar cache = {\n  CSS: {},\n  springs: {}\n};\n\n// Utils\n\nfunction minMax(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n\nfunction stringContains(str, text) {\n  return str.indexOf(text) > -1;\n}\n\nfunction applyArguments(func, args) {\n  return func.apply(null, args);\n}\n\nvar is = {\n  arr: function (a) { return Array.isArray(a); },\n  obj: function (a) { return stringContains(Object.prototype.toString.call(a), 'Object'); },\n  pth: function (a) { return is.obj(a) && a.hasOwnProperty('totalLength'); },\n  svg: function (a) { return a instanceof SVGElement; },\n  inp: function (a) { return a instanceof HTMLInputElement; },\n  dom: function (a) { return a.nodeType || is.svg(a); },\n  str: function (a) { return typeof a === 'string'; },\n  fnc: function (a) { return typeof a === 'function'; },\n  und: function (a) { return typeof a === 'undefined'; },\n  hex: function (a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a); },\n  rgb: function (a) { return /^rgb/.test(a); },\n  hsl: function (a) { return /^hsl/.test(a); },\n  col: function (a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)); },\n  key: function (a) { return !defaultInstanceSettings.hasOwnProperty(a) && !defaultTweenSettings.hasOwnProperty(a) && a !== 'targets' && a !== 'keyframes'; }\n};\n\n// Easings\n\nfunction parseEasingParameters(string) {\n  var match = /\\(([^)]+)\\)/.exec(string);\n  return match ? match[1].split(',').map(function (p) { return parseFloat(p); }) : [];\n}\n\n// Spring solver inspired by Webkit Copyright Â© 2016 Apple Inc. All rights reserved. https://webkit.org/demos/spring/spring.js\n\nfunction spring(string, duration) {\n\n  var params = parseEasingParameters(string);\n  var mass = minMax(is.und(params[0]) ? 1 : params[0], .1, 100);\n  var stiffness = minMax(is.und(params[1]) ? 100 : params[1], .1, 100);\n  var damping = minMax(is.und(params[2]) ? 10 : params[2], .1, 100);\n  var velocity =  minMax(is.und(params[3]) ? 0 : params[3], .1, 100);\n  var w0 = Math.sqrt(stiffness / mass);\n  var zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  var a = 1;\n  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n\n  function solver(t) {\n    var progress = duration ? (duration * t) / 1000 : t;\n    if (zeta < 1) {\n      progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n    } else {\n      progress = (a + b * progress) * Math.exp(-progress * w0);\n    }\n    if (t === 0 || t === 1) { return t; }\n    return 1 - progress;\n  }\n\n  function getDuration() {\n    var cached = cache.springs[string];\n    if (cached) { return cached; }\n    var frame = 1/6;\n    var elapsed = 0;\n    var rest = 0;\n    while(true) {\n      elapsed += frame;\n      if (solver(elapsed) === 1) {\n        rest++;\n        if (rest >= 16) { break; }\n      } else {\n        rest = 0;\n      }\n    }\n    var duration = elapsed * frame * 1000;\n    cache.springs[string] = duration;\n    return duration;\n  }\n\n  return duration ? solver : getDuration;\n\n}\n\n// Basic steps easing implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n\nfunction steps(steps) {\n  if ( steps === void 0 ) steps = 10;\n\n  return function (t) { return Math.ceil((minMax(t, 0.000001, 1)) * steps) * (1 / steps); };\n}\n\n// BezierEasing https://github.com/gre/bezier-easing\n\nvar bezier = (function () {\n\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 }\n  function C(aA1)      { return 3.0 * aA1 }\n\n  function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT }\n  function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX, currentT, i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) { aB = currentT; } else { aA = currentT; }\n    } while (Math.abs(currentX) > 0.0000001 && ++i < 10);\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) { return aGuessT; }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  function bezier(mX1, mY1, mX2, mY2) {\n\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { return; }\n    var sampleValues = new Float32Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n\n      var intervalStart = 0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= 0.001) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n\n    }\n\n    return function (x) {\n      if (mX1 === mY1 && mX2 === mY2) { return x; }\n      if (x === 0 || x === 1) { return x; }\n      return calcBezier(getTForX(x), mY1, mY2);\n    }\n\n  }\n\n  return bezier;\n\n})();\n\nvar penner = (function () {\n\n  // Based on jQuery UI's implemenation of easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n  var eases = { linear: function () { return function (t) { return t; }; } };\n\n  var functionEasings = {\n    Sine: function () { return function (t) { return 1 - Math.cos(t * Math.PI / 2); }; },\n    Circ: function () { return function (t) { return 1 - Math.sqrt(1 - t * t); }; },\n    Back: function () { return function (t) { return t * t * (3 * t - 2); }; },\n    Bounce: function () { return function (t) {\n      var pow2, b = 4;\n      while (t < (( pow2 = Math.pow(2, --b)) - 1) / 11) {}\n      return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow(( pow2 * 3 - 2 ) / 22 - t, 2)\n    }; },\n    Elastic: function (amplitude, period) {\n      if ( amplitude === void 0 ) amplitude = 1;\n      if ( period === void 0 ) period = .5;\n\n      var a = minMax(amplitude, 1, 10);\n      var p = minMax(period, .1, 2);\n      return function (t) {\n        return (t === 0 || t === 1) ? t : \n          -a * Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2) * Math.asin(1 / a))) * (Math.PI * 2)) / p);\n      }\n    }\n  };\n\n  var baseEasings = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n\n  baseEasings.forEach(function (name, i) {\n    functionEasings[name] = function () { return function (t) { return Math.pow(t, i + 2); }; };\n  });\n\n  Object.keys(functionEasings).forEach(function (name) {\n    var easeIn = functionEasings[name];\n    eases['easeIn' + name] = easeIn;\n    eases['easeOut' + name] = function (a, b) { return function (t) { return 1 - easeIn(a, b)(1 - t); }; };\n    eases['easeInOut' + name] = function (a, b) { return function (t) { return t < 0.5 ? easeIn(a, b)(t * 2) / 2 : \n      1 - easeIn(a, b)(t * -2 + 2) / 2; }; };\n  });\n\n  return eases;\n\n})();\n\nfunction parseEasings(easing, duration) {\n  if (is.fnc(easing)) { return easing; }\n  var name = easing.split('(')[0];\n  var ease = penner[name];\n  var args = parseEasingParameters(easing);\n  switch (name) {\n    case 'spring' : return spring(easing, duration);\n    case 'cubicBezier' : return applyArguments(bezier, args);\n    case 'steps' : return applyArguments(steps, args);\n    default : return applyArguments(ease, args);\n  }\n}\n\n// Strings\n\nfunction selectString(str) {\n  try {\n    var nodes = document.querySelectorAll(str);\n    return nodes;\n  } catch(e) {\n    return;\n  }\n}\n\n// Arrays\n\nfunction filterArray(arr, callback) {\n  var len = arr.length;\n  var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n  var result = [];\n  for (var i = 0; i < len; i++) {\n    if (i in arr) {\n      var val = arr[i];\n      if (callback.call(thisArg, val, i, arr)) {\n        result.push(val);\n      }\n    }\n  }\n  return result;\n}\n\nfunction flattenArray(arr) {\n  return arr.reduce(function (a, b) { return a.concat(is.arr(b) ? flattenArray(b) : b); }, []);\n}\n\nfunction toArray(o) {\n  if (is.arr(o)) { return o; }\n  if (is.str(o)) { o = selectString(o) || o; }\n  if (o instanceof NodeList || o instanceof HTMLCollection) { return [].slice.call(o); }\n  return [o];\n}\n\nfunction arrayContains(arr, val) {\n  return arr.some(function (a) { return a === val; });\n}\n\n// Objects\n\nfunction cloneObject(o) {\n  var clone = {};\n  for (var p in o) { clone[p] = o[p]; }\n  return clone;\n}\n\nfunction replaceObjectProps(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o1) { o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p]; }\n  return o;\n}\n\nfunction mergeObjects(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o2) { o[p] = is.und(o1[p]) ? o2[p] : o1[p]; }\n  return o;\n}\n\n// Colors\n\nfunction rgbToRgba(rgbValue) {\n  var rgb = /rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(rgbValue);\n  return rgb ? (\"rgba(\" + (rgb[1]) + \",1)\") : rgbValue;\n}\n\nfunction hexToRgba(hexValue) {\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var hex = hexValue.replace(rgx, function (m, r, g, b) { return r + r + g + g + b + b; } );\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  var r = parseInt(rgb[1], 16);\n  var g = parseInt(rgb[2], 16);\n  var b = parseInt(rgb[3], 16);\n  return (\"rgba(\" + r + \",\" + g + \",\" + b + \",1)\");\n}\n\nfunction hslToRgba(hslValue) {\n  var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hslValue) || /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(hslValue);\n  var h = parseInt(hsl[1], 10) / 360;\n  var s = parseInt(hsl[2], 10) / 100;\n  var l = parseInt(hsl[3], 10) / 100;\n  var a = hsl[4] || 1;\n  function hue2rgb(p, q, t) {\n    if (t < 0) { t += 1; }\n    if (t > 1) { t -= 1; }\n    if (t < 1/6) { return p + (q - p) * 6 * t; }\n    if (t < 1/2) { return q; }\n    if (t < 2/3) { return p + (q - p) * (2/3 - t) * 6; }\n    return p;\n  }\n  var r, g, b;\n  if (s == 0) {\n    r = g = b = l;\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n  return (\"rgba(\" + (r * 255) + \",\" + (g * 255) + \",\" + (b * 255) + \",\" + a + \")\");\n}\n\nfunction colorToRgb(val) {\n  if (is.rgb(val)) { return rgbToRgba(val); }\n  if (is.hex(val)) { return hexToRgba(val); }\n  if (is.hsl(val)) { return hslToRgba(val); }\n}\n\n// Units\n\nfunction getUnit(val) {\n  var split = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);\n  if (split) { return split[1]; }\n}\n\nfunction getTransformUnit(propName) {\n  if (stringContains(propName, 'translate') || propName === 'perspective') { return 'px'; }\n  if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) { return 'deg'; }\n}\n\n// Values\n\nfunction getFunctionValue(val, animatable) {\n  if (!is.fnc(val)) { return val; }\n  return val(animatable.target, animatable.id, animatable.total);\n}\n\nfunction getAttribute(el, prop) {\n  return el.getAttribute(prop);\n}\n\nfunction convertPxToUnit(el, value, unit) {\n  var valueUnit = getUnit(value);\n  if (arrayContains([unit, 'deg', 'rad', 'turn'], valueUnit)) { return value; }\n  var cached = cache.CSS[value + unit];\n  if (!is.und(cached)) { return cached; }\n  var baseline = 100;\n  var tempEl = document.createElement(el.tagName);\n  var parentEl = (el.parentNode && (el.parentNode !== document)) ? el.parentNode : document.body;\n  parentEl.appendChild(tempEl);\n  tempEl.style.position = 'absolute';\n  tempEl.style.width = baseline + unit;\n  var factor = baseline / tempEl.offsetWidth;\n  parentEl.removeChild(tempEl);\n  var convertedUnit = factor * parseFloat(value);\n  cache.CSS[value + unit] = convertedUnit;\n  return convertedUnit;\n}\n\nfunction getCSSValue(el, prop, unit) {\n  if (prop in el.style) {\n    var uppercasePropName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    var value = el.style[prop] || getComputedStyle(el).getPropertyValue(uppercasePropName) || '0';\n    return unit ? convertPxToUnit(el, value, unit) : value;\n  }\n}\n\nfunction getAnimationType(el, prop) {\n  if (is.dom(el) && !is.inp(el) && (getAttribute(el, prop) || (is.svg(el) && el[prop]))) { return 'attribute'; }\n  if (is.dom(el) && arrayContains(validTransforms, prop)) { return 'transform'; }\n  if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) { return 'css'; }\n  if (el[prop] != null) { return 'object'; }\n}\n\nfunction getElementTransforms(el) {\n  if (!is.dom(el)) { return; }\n  var str = el.style.transform || '';\n  var reg  = /(\\w+)\\(([^)]*)\\)/g;\n  var transforms = new Map();\n  var m; while (m = reg.exec(str)) { transforms.set(m[1], m[2]); }\n  return transforms;\n}\n\nfunction getTransformValue(el, propName, animatable, unit) {\n  var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + getTransformUnit(propName);\n  var value = getElementTransforms(el).get(propName) || defaultVal;\n  if (animatable) {\n    animatable.transforms.list.set(propName, value);\n    animatable.transforms['last'] = propName;\n  }\n  return unit ? convertPxToUnit(el, value, unit) : value;\n}\n\nfunction getOriginalTargetValue(target, propName, unit, animatable) {\n  switch (getAnimationType(target, propName)) {\n    case 'transform': return getTransformValue(target, propName, animatable, unit);\n    case 'css': return getCSSValue(target, propName, unit);\n    case 'attribute': return getAttribute(target, propName);\n    default: return target[propName] || 0;\n  }\n}\n\nfunction getRelativeValue(to, from) {\n  var operator = /^(\\*=|\\+=|-=)/.exec(to);\n  if (!operator) { return to; }\n  var u = getUnit(to) || 0;\n  var x = parseFloat(from);\n  var y = parseFloat(to.replace(operator[0], ''));\n  switch (operator[0][0]) {\n    case '+': return x + y + u;\n    case '-': return x - y + u;\n    case '*': return x * y + u;\n  }\n}\n\nfunction validateValue(val, unit) {\n  if (is.col(val)) { return colorToRgb(val); }\n  if (/\\s/g.test(val)) { return val; }\n  var originalUnit = getUnit(val);\n  var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;\n  if (unit) { return unitLess + unit; }\n  return unitLess;\n}\n\n// getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes\n// adapted from https://gist.github.com/SebLambla/3e0550c496c236709744\n\nfunction getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el) {\n  return Math.PI * 2 * getAttribute(el, 'r');\n}\n\nfunction getRectLength(el) {\n  return (getAttribute(el, 'width') * 2) + (getAttribute(el, 'height') * 2);\n}\n\nfunction getLineLength(el) {\n  return getDistance(\n    {x: getAttribute(el, 'x1'), y: getAttribute(el, 'y1')}, \n    {x: getAttribute(el, 'x2'), y: getAttribute(el, 'y2')}\n  );\n}\n\nfunction getPolylineLength(el) {\n  var points = el.points;\n  var totalLength = 0;\n  var previousPos;\n  for (var i = 0 ; i < points.numberOfItems; i++) {\n    var currentPos = points.getItem(i);\n    if (i > 0) { totalLength += getDistance(previousPos, currentPos); }\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el) {\n  var points = el.points;\n  return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n}\n\n// Path animation\n\nfunction getTotalLength(el) {\n  if (el.getTotalLength) { return el.getTotalLength(); }\n  switch(el.tagName.toLowerCase()) {\n    case 'circle': return getCircleLength(el);\n    case 'rect': return getRectLength(el);\n    case 'line': return getLineLength(el);\n    case 'polyline': return getPolylineLength(el);\n    case 'polygon': return getPolygonLength(el);\n  }\n}\n\nfunction setDashoffset(el) {\n  var pathLength = getTotalLength(el);\n  el.setAttribute('stroke-dasharray', pathLength);\n  return pathLength;\n}\n\n// Motion path\n\nfunction getParentSvgEl(el) {\n  var parentEl = el.parentNode;\n  while (is.svg(parentEl)) {\n    if (!is.svg(parentEl.parentNode)) { break; }\n    parentEl = parentEl.parentNode;\n  }\n  return parentEl;\n}\n\nfunction getParentSvg(pathEl, svgData) {\n  var svg = svgData || {};\n  var parentSvgEl = svg.el || getParentSvgEl(pathEl);\n  var rect = parentSvgEl.getBoundingClientRect();\n  var viewBoxAttr = getAttribute(parentSvgEl, 'viewBox');\n  var width = rect.width;\n  var height = rect.height;\n  var viewBox = svg.viewBox || (viewBoxAttr ? viewBoxAttr.split(' ') : [0, 0, width, height]);\n  return {\n    el: parentSvgEl,\n    viewBox: viewBox,\n    x: viewBox[0] / 1,\n    y: viewBox[1] / 1,\n    w: width / viewBox[2],\n    h: height / viewBox[3]\n  }\n}\n\nfunction getPath(path, percent) {\n  var pathEl = is.str(path) ? selectString(path)[0] : path;\n  var p = percent || 100;\n  return function(property) {\n    return {\n      property: property,\n      el: pathEl,\n      svg: getParentSvg(pathEl),\n      totalLength: getTotalLength(pathEl) * (p / 100)\n    }\n  }\n}\n\nfunction getPathProgress(path, progress) {\n  function point(offset) {\n    if ( offset === void 0 ) offset = 0;\n\n    var l = progress + offset >= 1 ? progress + offset : 0;\n    return path.el.getPointAtLength(l);\n  }\n  var svg = getParentSvg(path.el, path.svg);\n  var p = point();\n  var p0 = point(-1);\n  var p1 = point(+1);\n  switch (path.property) {\n    case 'x': return (p.x - svg.x) * svg.w;\n    case 'y': return (p.y - svg.y) * svg.h;\n    case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n  }\n}\n\n// Decompose value\n\nfunction decomposeValue(val, unit) {\n  // const rgx = /-?\\d*\\.?\\d+/g; // handles basic numbers\n  // const rgx = /[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var rgx = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var value = validateValue((is.pth(val) ? val.totalLength : val), unit) + '';\n  return {\n    original: value,\n    numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],\n    strings: (is.str(val) || unit) ? value.split(rgx) : []\n  }\n}\n\n// Animatables\n\nfunction parseTargets(targets) {\n  var targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n  return filterArray(targetsArray, function (item, pos, self) { return self.indexOf(item) === pos; });\n}\n\nfunction getAnimatables(targets) {\n  var parsed = parseTargets(targets);\n  return parsed.map(function (t, i) {\n    return {target: t, id: i, total: parsed.length, transforms: { list: getElementTransforms(t) } };\n  });\n}\n\n// Properties\n\nfunction normalizePropertyTweens(prop, tweenSettings) {\n  var settings = cloneObject(tweenSettings);\n  // Override duration if easing is a spring\n  if (/^spring/.test(settings.easing)) { settings.duration = spring(settings.easing); }\n  if (is.arr(prop)) {\n    var l = prop.length;\n    var isFromTo = (l === 2 && !is.obj(prop[0]));\n    if (!isFromTo) {\n      // Duration divided by the number of tweens\n      if (!is.fnc(tweenSettings.duration)) { settings.duration = tweenSettings.duration / l; }\n    } else {\n      // Transform [from, to] values shorthand to a valid tween value\n      prop = {value: prop};\n    }\n  }\n  var propArray = is.arr(prop) ? prop : [prop];\n  return propArray.map(function (v, i) {\n    var obj = (is.obj(v) && !is.pth(v)) ? v : {value: v};\n    // Default delay value should only be applied to the first tween\n    if (is.und(obj.delay)) { obj.delay = !i ? tweenSettings.delay : 0; }\n    // Default endDelay value should only be applied to the last tween\n    if (is.und(obj.endDelay)) { obj.endDelay = i === propArray.length - 1 ? tweenSettings.endDelay : 0; }\n    return obj;\n  }).map(function (k) { return mergeObjects(k, settings); });\n}\n\n\nfunction flattenKeyframes(keyframes) {\n  var propertyNames = filterArray(flattenArray(keyframes.map(function (key) { return Object.keys(key); })), function (p) { return is.key(p); })\n  .reduce(function (a,b) { if (a.indexOf(b) < 0) { a.push(b); } return a; }, []);\n  var properties = {};\n  var loop = function ( i ) {\n    var propName = propertyNames[i];\n    properties[propName] = keyframes.map(function (key) {\n      var newKey = {};\n      for (var p in key) {\n        if (is.key(p)) {\n          if (p == propName) { newKey.value = key[p]; }\n        } else {\n          newKey[p] = key[p];\n        }\n      }\n      return newKey;\n    });\n  };\n\n  for (var i = 0; i < propertyNames.length; i++) loop( i );\n  return properties;\n}\n\nfunction getProperties(tweenSettings, params) {\n  var properties = [];\n  var keyframes = params.keyframes;\n  if (keyframes) { params = mergeObjects(flattenKeyframes(keyframes), params); }\n  for (var p in params) {\n    if (is.key(p)) {\n      properties.push({\n        name: p,\n        tweens: normalizePropertyTweens(params[p], tweenSettings)\n      });\n    }\n  }\n  return properties;\n}\n\n// Tweens\n\nfunction normalizeTweenValues(tween, animatable) {\n  var t = {};\n  for (var p in tween) {\n    var value = getFunctionValue(tween[p], animatable);\n    if (is.arr(value)) {\n      value = value.map(function (v) { return getFunctionValue(v, animatable); });\n      if (value.length === 1) { value = value[0]; }\n    }\n    t[p] = value;\n  }\n  t.duration = parseFloat(t.duration);\n  t.delay = parseFloat(t.delay);\n  return t;\n}\n\nfunction normalizeTweens(prop, animatable) {\n  var previousTween;\n  return prop.tweens.map(function (t) {\n    var tween = normalizeTweenValues(t, animatable);\n    var tweenValue = tween.value;\n    var to = is.arr(tweenValue) ? tweenValue[1] : tweenValue;\n    var toUnit = getUnit(to);\n    var originalValue = getOriginalTargetValue(animatable.target, prop.name, toUnit, animatable);\n    var previousValue = previousTween ? previousTween.to.original : originalValue;\n    var from = is.arr(tweenValue) ? tweenValue[0] : previousValue;\n    var fromUnit = getUnit(from) || getUnit(originalValue);\n    var unit = toUnit || fromUnit;\n    if (is.und(to)) { to = previousValue; }\n    tween.from = decomposeValue(from, unit);\n    tween.to = decomposeValue(getRelativeValue(to, from), unit);\n    tween.start = previousTween ? previousTween.end : 0;\n    tween.end = tween.start + tween.delay + tween.duration + tween.endDelay;\n    tween.easing = parseEasings(tween.easing, tween.duration);\n    tween.isPath = is.pth(tweenValue);\n    tween.isColor = is.col(tween.from.original);\n    if (tween.isColor) { tween.round = 1; }\n    previousTween = tween;\n    return tween;\n  });\n}\n\n// Tween progress\n\nvar setProgressValue = {\n  css: function (t, p, v) { return t.style[p] = v; },\n  attribute: function (t, p, v) { return t.setAttribute(p, v); },\n  object: function (t, p, v) { return t[p] = v; },\n  transform: function (t, p, v, transforms, manual) {\n    transforms.list.set(p, v);\n    if (p === transforms.last || manual) {\n      var str = '';\n      transforms.list.forEach(function (value, prop) { str += prop + \"(\" + value + \") \"; });\n      t.style.transform = str;\n    }\n  }\n};\n\n// Set Value helper\n\nfunction setTargetsValue(targets, properties) {\n  var animatables = getAnimatables(targets);\n  animatables.forEach(function (animatable) {\n    for (var property in properties) {\n      var value = getFunctionValue(properties[property], animatable);\n      var target = animatable.target;\n      var valueUnit = getUnit(value);\n      var originalValue = getOriginalTargetValue(target, property, valueUnit, animatable);\n      var unit = valueUnit || getUnit(originalValue);\n      var to = getRelativeValue(validateValue(value, unit), originalValue);\n      var animType = getAnimationType(target, property);\n      setProgressValue[animType](target, property, to, animatable.transforms, true);\n    }\n  });\n}\n\n// Animations\n\nfunction createAnimation(animatable, prop) {\n  var animType = getAnimationType(animatable.target, prop.name);\n  if (animType) {\n    var tweens = normalizeTweens(prop, animatable);\n    var lastTween = tweens[tweens.length - 1];\n    return {\n      type: animType,\n      property: prop.name,\n      animatable: animatable,\n      tweens: tweens,\n      duration: lastTween.end,\n      delay: tweens[0].delay,\n      endDelay: lastTween.endDelay\n    }\n  }\n}\n\nfunction getAnimations(animatables, properties) {\n  return filterArray(flattenArray(animatables.map(function (animatable) {\n    return properties.map(function (prop) {\n      return createAnimation(animatable, prop);\n    });\n  })), function (a) { return !is.und(a); });\n}\n\n// Create Instance\n\nfunction getInstanceTimings(animations, tweenSettings) {\n  var animLength = animations.length;\n  var getTlOffset = function (anim) { return anim.timelineOffset ? anim.timelineOffset : 0; };\n  var timings = {};\n  timings.duration = animLength ? Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration; })) : tweenSettings.duration;\n  timings.delay = animLength ? Math.min.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.delay; })) : tweenSettings.delay;\n  timings.endDelay = animLength ? timings.duration - Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration - anim.endDelay; })) : tweenSettings.endDelay;\n  return timings;\n}\n\nvar instanceID = 0;\n\nfunction createNewInstance(params) {\n  var instanceSettings = replaceObjectProps(defaultInstanceSettings, params);\n  var tweenSettings = replaceObjectProps(defaultTweenSettings, params);\n  var properties = getProperties(tweenSettings, params);\n  var animatables = getAnimatables(params.targets);\n  var animations = getAnimations(animatables, properties);\n  var timings = getInstanceTimings(animations, tweenSettings);\n  var id = instanceID;\n  instanceID++;\n  return mergeObjects(instanceSettings, {\n    id: id,\n    children: [],\n    animatables: animatables,\n    animations: animations,\n    duration: timings.duration,\n    delay: timings.delay,\n    endDelay: timings.endDelay\n  });\n}\n\n// Core\n\nvar activeInstances = [];\nvar pausedInstances = [];\nvar raf;\n\nvar engine = (function () {\n  function play() { \n    raf = requestAnimationFrame(step);\n  }\n  function step(t) {\n    var activeInstancesLength = activeInstances.length;\n    if (activeInstancesLength) {\n      var i = 0;\n      while (i < activeInstancesLength) {\n        var activeInstance = activeInstances[i];\n        if (!activeInstance.paused) {\n          activeInstance.tick(t);\n        } else {\n          var instanceIndex = activeInstances.indexOf(activeInstance);\n          if (instanceIndex > -1) {\n            activeInstances.splice(instanceIndex, 1);\n            activeInstancesLength = activeInstances.length;\n          }\n        }\n        i++;\n      }\n      play();\n    } else {\n      raf = cancelAnimationFrame(raf);\n    }\n  }\n  return play;\n})();\n\nfunction handleVisibilityChange() {\n  if (document.hidden) {\n    activeInstances.forEach(function (ins) { return ins.pause(); });\n    pausedInstances = activeInstances.slice(0);\n    anime.running = activeInstances = [];\n  } else {\n    pausedInstances.forEach(function (ins) { return ins.play(); });\n  }\n}\n\nif (typeof document !== 'undefined') {\n  document.addEventListener('visibilitychange', handleVisibilityChange);\n}\n\n// Public Instance\n\nfunction anime(params) {\n  if ( params === void 0 ) params = {};\n\n\n  var startTime = 0, lastTime = 0, now = 0;\n  var children, childrenLength = 0;\n  var resolve = null;\n\n  function makePromise(instance) {\n    var promise = window.Promise && new Promise(function (_resolve) { return resolve = _resolve; });\n    instance.finished = promise;\n    return promise;\n  }\n\n  var instance = createNewInstance(params);\n  var promise = makePromise(instance);\n\n  function toggleInstanceDirection() {\n    var direction = instance.direction;\n    if (direction !== 'alternate') {\n      instance.direction = direction !== 'normal' ? 'normal' : 'reverse';\n    }\n    instance.reversed = !instance.reversed;\n    children.forEach(function (child) { return child.reversed = instance.reversed; });\n  }\n\n  function adjustTime(time) {\n    return instance.reversed ? instance.duration - time : time;\n  }\n\n  function resetTime() {\n    startTime = 0;\n    lastTime = adjustTime(instance.currentTime) * (1 / anime.speed);\n  }\n\n  function seekChild(time, child) {\n    if (child) { child.seek(time - child.timelineOffset); }\n  }\n\n  function syncInstanceChildren(time) {\n    if (!instance.reversePlayback) {\n      for (var i = 0; i < childrenLength; i++) { seekChild(time, children[i]); }\n    } else {\n      for (var i$1 = childrenLength; i$1--;) { seekChild(time, children[i$1]); }\n    }\n  }\n\n  function setAnimationsProgress(insTime) {\n    var i = 0;\n    var animations = instance.animations;\n    var animationsLength = animations.length;\n    while (i < animationsLength) {\n      var anim = animations[i];\n      var animatable = anim.animatable;\n      var tweens = anim.tweens;\n      var tweenLength = tweens.length - 1;\n      var tween = tweens[tweenLength];\n      // Only check for keyframes if there is more than one tween\n      if (tweenLength) { tween = filterArray(tweens, function (t) { return (insTime < t.end); })[0] || tween; }\n      var elapsed = minMax(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;\n      var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed);\n      var strings = tween.to.strings;\n      var round = tween.round;\n      var numbers = [];\n      var toNumbersLength = tween.to.numbers.length;\n      var progress = (void 0);\n      for (var n = 0; n < toNumbersLength; n++) {\n        var value = (void 0);\n        var toNumber = tween.to.numbers[n];\n        var fromNumber = tween.from.numbers[n] || 0;\n        if (!tween.isPath) {\n          value = fromNumber + (eased * (toNumber - fromNumber));\n        } else {\n          value = getPathProgress(tween.value, eased * toNumber);\n        }\n        if (round) {\n          if (!(tween.isColor && n > 2)) {\n            value = Math.round(value * round) / round;\n          }\n        }\n        numbers.push(value);\n      }\n      // Manual Array.reduce for better performances\n      var stringsLength = strings.length;\n      if (!stringsLength) {\n        progress = numbers[0];\n      } else {\n        progress = strings[0];\n        for (var s = 0; s < stringsLength; s++) {\n          var a = strings[s];\n          var b = strings[s + 1];\n          var n$1 = numbers[s];\n          if (!isNaN(n$1)) {\n            if (!b) {\n              progress += n$1 + ' ';\n            } else {\n              progress += n$1 + b;\n            }\n          }\n        }\n      }\n      setProgressValue[anim.type](animatable.target, anim.property, progress, animatable.transforms);\n      anim.currentValue = progress;\n      i++;\n    }\n  }\n\n  function setCallback(cb) {\n    if (instance[cb] && !instance.passThrough) { instance[cb](instance); }\n  }\n\n  function countIteration() {\n    if (instance.remaining && instance.remaining !== true) {\n      instance.remaining--;\n    }\n  }\n\n  function setInstanceProgress(engineTime) {\n    var insDuration = instance.duration;\n    var insDelay = instance.delay;\n    var insEndDelay = insDuration - instance.endDelay;\n    var insTime = adjustTime(engineTime);\n    instance.progress = minMax((insTime / insDuration) * 100, 0, 100);\n    instance.reversePlayback = insTime < instance.currentTime;\n    if (children) { syncInstanceChildren(insTime); }\n    if (!instance.began && instance.currentTime > 0) {\n      instance.began = true;\n      setCallback('begin');\n    }\n    if (!instance.loopBegan && instance.currentTime > 0) {\n      instance.loopBegan = true;\n      setCallback('loopBegin');\n    }\n    if (insTime <= insDelay && instance.currentTime !== 0) {\n      setAnimationsProgress(0);\n    }\n    if ((insTime >= insEndDelay && instance.currentTime !== insDuration) || !insDuration) {\n      setAnimationsProgress(insDuration);\n    }\n    if (insTime > insDelay && insTime < insEndDelay) {\n      if (!instance.changeBegan) {\n        instance.changeBegan = true;\n        instance.changeCompleted = false;\n        setCallback('changeBegin');\n      }\n      setCallback('change');\n      setAnimationsProgress(insTime);\n    } else {\n      if (instance.changeBegan) {\n        instance.changeCompleted = true;\n        instance.changeBegan = false;\n        setCallback('changeComplete');\n      }\n    }\n    instance.currentTime = minMax(insTime, 0, insDuration);\n    if (instance.began) { setCallback('update'); }\n    if (engineTime >= insDuration) {\n      lastTime = 0;\n      countIteration();\n      if (!instance.remaining) {\n        instance.paused = true;\n        if (!instance.completed) {\n          instance.completed = true;\n          setCallback('loopComplete');\n          setCallback('complete');\n          if (!instance.passThrough && 'Promise' in window) {\n            resolve();\n            promise = makePromise(instance);\n          }\n        }\n      } else {\n        startTime = now;\n        setCallback('loopComplete');\n        instance.loopBegan = false;\n        if (instance.direction === 'alternate') {\n          toggleInstanceDirection();\n        }\n      }\n    }\n  }\n\n  instance.reset = function() {\n    var direction = instance.direction;\n    instance.passThrough = false;\n    instance.currentTime = 0;\n    instance.progress = 0;\n    instance.paused = true;\n    instance.began = false;\n    instance.loopBegan = false;\n    instance.changeBegan = false;\n    instance.completed = false;\n    instance.changeCompleted = false;\n    instance.reversePlayback = false;\n    instance.reversed = direction === 'reverse';\n    instance.remaining = instance.loop;\n    children = instance.children;\n    childrenLength = children.length;\n    for (var i = childrenLength; i--;) { instance.children[i].reset(); }\n    if (instance.reversed && instance.loop !== true || (direction === 'alternate' && instance.loop === 1)) { instance.remaining++; }\n    setAnimationsProgress(instance.reversed ? instance.duration : 0);\n  };\n\n  // Set Value helper\n\n  instance.set = function(targets, properties) {\n    setTargetsValue(targets, properties);\n    return instance;\n  };\n\n  instance.tick = function(t) {\n    now = t;\n    if (!startTime) { startTime = now; }\n    setInstanceProgress((now + (lastTime - startTime)) * anime.speed);\n  };\n\n  instance.seek = function(time) {\n    setInstanceProgress(adjustTime(time));\n  };\n\n  instance.pause = function() {\n    instance.paused = true;\n    resetTime();\n  };\n\n  instance.play = function() {\n    if (!instance.paused) { return; }\n    if (instance.completed) { instance.reset(); }\n    instance.paused = false;\n    activeInstances.push(instance);\n    resetTime();\n    if (!raf) { engine(); }\n  };\n\n  instance.reverse = function() {\n    toggleInstanceDirection();\n    instance.completed = instance.reversed ? false : true;\n    resetTime();\n  };\n\n  instance.restart = function() {\n    instance.reset();\n    instance.play();\n  };\n\n  instance.reset();\n\n  if (instance.autoplay) { instance.play(); }\n\n  return instance;\n\n}\n\n// Remove targets from animation\n\nfunction removeTargetsFromAnimations(targetsArray, animations) {\n  for (var a = animations.length; a--;) {\n    if (arrayContains(targetsArray, animations[a].animatable.target)) {\n      animations.splice(a, 1);\n    }\n  }\n}\n\nfunction removeTargets(targets) {\n  var targetsArray = parseTargets(targets);\n  for (var i = activeInstances.length; i--;) {\n    var instance = activeInstances[i];\n    var animations = instance.animations;\n    var children = instance.children;\n    removeTargetsFromAnimations(targetsArray, animations);\n    for (var c = children.length; c--;) {\n      var child = children[c];\n      var childAnimations = child.animations;\n      removeTargetsFromAnimations(targetsArray, childAnimations);\n      if (!childAnimations.length && !child.children.length) { children.splice(c, 1); }\n    }\n    if (!animations.length && !children.length) { instance.pause(); }\n  }\n}\n\n// Stagger helpers\n\nfunction stagger(val, params) {\n  if ( params === void 0 ) params = {};\n\n  var direction = params.direction || 'normal';\n  var easing = params.easing ? parseEasings(params.easing) : null;\n  var grid = params.grid;\n  var axis = params.axis;\n  var fromIndex = params.from || 0;\n  var fromFirst = fromIndex === 'first';\n  var fromCenter = fromIndex === 'center';\n  var fromLast = fromIndex === 'last';\n  var isRange = is.arr(val);\n  var val1 = isRange ? parseFloat(val[0]) : parseFloat(val);\n  var val2 = isRange ? parseFloat(val[1]) : 0;\n  var unit = getUnit(isRange ? val[1] : val) || 0;\n  var start = params.start || 0 + (isRange ? val1 : 0);\n  var values = [];\n  var maxValue = 0;\n  return function (el, i, t) {\n    if (fromFirst) { fromIndex = 0; }\n    if (fromCenter) { fromIndex = (t - 1) / 2; }\n    if (fromLast) { fromIndex = t - 1; }\n    if (!values.length) {\n      for (var index = 0; index < t; index++) {\n        if (!grid) {\n          values.push(Math.abs(fromIndex - index));\n        } else {\n          var fromX = !fromCenter ? fromIndex%grid[0] : (grid[0]-1)/2;\n          var fromY = !fromCenter ? Math.floor(fromIndex/grid[0]) : (grid[1]-1)/2;\n          var toX = index%grid[0];\n          var toY = Math.floor(index/grid[0]);\n          var distanceX = fromX - toX;\n          var distanceY = fromY - toY;\n          var value = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') { value = -distanceX; }\n          if (axis === 'y') { value = -distanceY; }\n          values.push(value);\n        }\n        maxValue = Math.max.apply(Math, values);\n      }\n      if (easing) { values = values.map(function (val) { return easing(val / maxValue) * maxValue; }); }\n      if (direction === 'reverse') { values = values.map(function (val) { return axis ? (val < 0) ? val * -1 : -val : Math.abs(maxValue - val); }); }\n    }\n    var spacing = isRange ? (val2 - val1) / maxValue : val1;\n    return start + (spacing * (Math.round(values[i] * 100) / 100)) + unit;\n  }\n}\n\n// Timeline\n\nfunction timeline(params) {\n  if ( params === void 0 ) params = {};\n\n  var tl = anime(params);\n  tl.duration = 0;\n  tl.add = function(instanceParams, timelineOffset) {\n    var tlIndex = activeInstances.indexOf(tl);\n    var children = tl.children;\n    if (tlIndex > -1) { activeInstances.splice(tlIndex, 1); }\n    function passThrough(ins) { ins.passThrough = true; }\n    for (var i = 0; i < children.length; i++) { passThrough(children[i]); }\n    var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params));\n    insParams.targets = insParams.targets || params.targets;\n    var tlDuration = tl.duration;\n    insParams.autoplay = false;\n    insParams.direction = tl.direction;\n    insParams.timelineOffset = is.und(timelineOffset) ? tlDuration : getRelativeValue(timelineOffset, tlDuration);\n    passThrough(tl);\n    tl.seek(insParams.timelineOffset);\n    var ins = anime(insParams);\n    passThrough(ins);\n    children.push(ins);\n    var timings = getInstanceTimings(children, params);\n    tl.delay = timings.delay;\n    tl.endDelay = timings.endDelay;\n    tl.duration = timings.duration;\n    tl.seek(0);\n    tl.reset();\n    if (tl.autoplay) { tl.play(); }\n    return tl;\n  };\n  return tl;\n}\n\nanime.version = '3.2.0';\nanime.speed = 1;\nanime.running = activeInstances;\nanime.remove = removeTargets;\nanime.get = getOriginalTargetValue;\nanime.set = setTargetsValue;\nanime.convertPx = convertPxToUnit;\nanime.path = getPath;\nanime.setDashoffset = setDashoffset;\nanime.stagger = stagger;\nanime.timeline = timeline;\nanime.easing = parseEasings;\nanime.penner = penner;\nanime.random = function (min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; };\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (anime);\n\n\n//# sourceURL=webpack:///./node_modules/animejs/lib/anime.es.js?");

/***/ }),

/***/ "./node_modules/global/window.js":
/*!***************************************!*\
  !*** ./node_modules/global/window.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/global/window.js?");

/***/ }),

/***/ "./node_modules/glslCanvas/dist/GlslCanvas.es.js":
/*!*******************************************************!*\
  !*** ./node_modules/glslCanvas/dist/GlslCanvas.es.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var xhr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! xhr */ \"./node_modules/xhr/index.js\");\n/* harmony import */ var xhr__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(xhr__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar lastError = '';\n\n/**\n * Creates the HTLM for a failure message\n * @param {string} canvasContainerId id of container of th\n *        canvas.\n * @return {string} The html.\n */\nfunction makeFailHTML(msg) {\n    return '\\n<table style=\"background-color: #8CE; width: 100%; height: 100%;\"><tr>\\n<td align=\"center\">\\n<div style=\"display: table-cell; vertical-align: middle;\">\\n<div style=\"\">' + msg + '</div>\\n</div>\\n</td></tr></table>\\n';\n}\n\n/**\n * Message for getting a webgl browser\n * @type {string}\n */\nvar GET_A_WEBGL_BROWSER = '\\n\\tThis page requires a browser that supports WebGL.<br/>\\n\\t<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>\\n';\n\n/**\n * Message for need better hardware\n * @type {string}\n */\nvar OTHER_PROBLEM = '\\n\\tIt does not appear your computer can support WebGL.<br/>\\n\\t<a href=\"http://get.webgl.org/troubleshooting/\">Click here for more information.</a>\\n';\n\n/**\n * Code to return in `onError` callback when the browser doesn't support webgl\n * @type {number}\n */\nvar ERROR_BROWSER_SUPPORT = 1;\n\n/**\n * Code to return in `onError` callback there's any other problem related to webgl\n * @type {number}\n */\nvar ERROR_OTHER = 2;\n\n/**\n * Creates a webgl context. If creation fails it will\n * change the contents of the container of the <canvas>\n * tag to an error message with the correct links for WebGL,\n * unless `onError` option is defined to a callback,\n * which allows for custom error handling..\n * @param {Element} canvas. The canvas element to create a\n *     context from.\n * @param {WebGLContextCreationAttributes} optAttribs Any\n *     creation attributes you want to pass in.\n * @return {WebGLRenderingContext} The created context.\n */\nfunction setupWebGL(canvas, optAttribs, onError) {\n    function showLink(str) {\n        var container = canvas.parentNode;\n        if (container) {\n            container.innerHTML = makeFailHTML(str);\n        }\n    }\n\n    function handleError(errorCode, msg) {\n        if (typeof onError === 'function') {\n            onError(errorCode);\n        } else {\n            showLink(msg);\n        }\n    }\n\n    if (!window.WebGLRenderingContext) {\n        handleError(ERROR_BROWSER_SUPPORT, GET_A_WEBGL_BROWSER);\n        return null;\n    }\n\n    var context = create3DContext(canvas, optAttribs);\n    if (!context) {\n        handleError(ERROR_OTHER, OTHER_PROBLEM);\n    } else {\n        context.getExtension('OES_standard_derivatives');\n    }\n    return context;\n}\n\n/**\n * Creates a webgl context.\n * @param {!Canvas} canvas The canvas tag to get context\n *     from. If one is not passed in one will be created.\n * @return {!WebGLContext} The created context.\n */\nfunction create3DContext(canvas, optAttribs) {\n    var names = ['webgl', 'experimental-webgl'];\n    var context = null;\n    for (var ii = 0; ii < names.length; ++ii) {\n        try {\n            context = canvas.getContext(names[ii], optAttribs);\n        } catch (e) {\n            if (context) {\n                break;\n            }\n        }\n    }\n    return context;\n}\n\n/*\n *\tCreate a Vertex of a specific type (gl.VERTEX_SHADER/)\n */\nfunction createShader(main, source, type, offset) {\n    var gl = main.gl;\n\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n    if (!compiled) {\n        // Something went wrong during compilation; get the error\n        lastError = gl.getShaderInfoLog(shader);\n        console.error('*** Error compiling shader ' + shader + ':' + lastError);\n        main.trigger('error', {\n            shader: shader,\n            source: source,\n            type: type,\n            error: lastError,\n            offset: offset || 0\n        });\n        gl.deleteShader(shader);\n        return null;\n    }\n\n    return shader;\n}\n\n/**\n * Loads a shader.\n * @param {!WebGLContext} gl The WebGLContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {function(string): void) opt_errorCallback callback for errors.\n * @return {!WebGLShader} The created shader.\n */\nfunction createProgram(main, shaders, optAttribs, optLocations) {\n    var gl = main.gl;\n\n    var program = gl.createProgram();\n    for (var ii = 0; ii < shaders.length; ++ii) {\n        gl.attachShader(program, shaders[ii]);\n    }\n    if (optAttribs) {\n        for (var _ii = 0; _ii < optAttribs.length; ++_ii) {\n            gl.bindAttribLocation(program, optLocations ? optLocations[_ii] : _ii, optAttribs[_ii]);\n        }\n    }\n    gl.linkProgram(program);\n\n    // Check the link status\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n        // something went wrong with the link\n        lastError = gl.getProgramInfoLog(program);\n        console.log('Error in program linking:' + lastError);\n        gl.deleteProgram(program);\n        return null;\n    }\n    return program;\n}\n\n// By Brett Camber on\n// https://github.com/tangrams/tangram/blob/master/src/gl/glsl.js\nfunction parseUniforms(uniforms) {\n    var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    var parsed = [];\n\n    for (var name in uniforms) {\n        var uniform = uniforms[name];\n        var u = void 0;\n\n        if (prefix) {\n            name = prefix + '.' + name;\n        }\n\n        // Single float\n        if (typeof uniform === 'number') {\n            parsed.push({\n                type: 'float',\n                method: '1f',\n                name: name,\n                value: uniform\n            });\n        }\n        // Array: vector, array of floats, array of textures, or array of structs\n        else if (Array.isArray(uniform)) {\n                // Numeric values\n                if (typeof uniform[0] === 'number') {\n                    // float vectors (vec2, vec3, vec4)\n                    if (uniform.length === 1) {\n                        parsed.push({\n                            type: 'float',\n                            method: '1f',\n                            name: name,\n                            value: uniform\n                        });\n                    }\n                    // float vectors (vec2, vec3, vec4)\n                    else if (uniform.length >= 2 && uniform.length <= 4) {\n                            parsed.push({\n                                type: 'vec' + uniform.length,\n                                method: uniform.length + 'fv',\n                                name: name,\n                                value: uniform\n                            });\n                        }\n                        // float array\n                        else if (uniform.length > 4) {\n                                parsed.push({\n                                    type: 'float[]',\n                                    method: '1fv',\n                                    name: name + '[0]',\n                                    value: uniform\n                                });\n                            }\n                    // TODO: assume matrix for (typeof == Float32Array && length == 16)?\n                }\n                // Array of textures\n                else if (typeof uniform[0] === 'string') {\n                        parsed.push({\n                            type: 'sampler2D',\n                            method: '1i',\n                            name: name,\n                            value: uniform\n                        });\n                    }\n                    // Array of arrays - but only arrays of vectors are allowed in this case\n                    else if (Array.isArray(uniform[0]) && typeof uniform[0][0] === 'number') {\n                            // float vectors (vec2, vec3, vec4)\n                            if (uniform[0].length >= 2 && uniform[0].length <= 4) {\n                                // Set each vector in the array\n                                for (u = 0; u < uniform.length; u++) {\n                                    parsed.push({\n                                        type: 'vec' + uniform[0].length,\n                                        method: uniform[u].length + 'fv',\n                                        name: name + '[' + u + ']',\n                                        value: uniform[u]\n                                    });\n                                }\n                            }\n                            // else error?\n                        }\n                        // Array of structures\n                        else if (_typeof(uniform[0]) === 'object') {\n                                for (u = 0; u < uniform.length; u++) {\n                                    // Set each struct in the array\n                                    parsed.push.apply(parsed, toConsumableArray(parseUniforms(uniform[u], name + '[' + u + ']')));\n                                }\n                            }\n            }\n            // Boolean\n            else if (typeof uniform === 'boolean') {\n                    parsed.push({\n                        type: 'bool',\n                        method: '1i',\n                        name: name,\n                        value: uniform\n                    });\n                }\n                // Texture\n                else if (typeof uniform === 'string') {\n                        parsed.push({\n                            type: 'sampler2D',\n                            method: '1i',\n                            name: name,\n                            value: uniform\n                        });\n                    }\n                    // Structure\n                    else if ((typeof uniform === 'undefined' ? 'undefined' : _typeof(uniform)) === 'object') {\n                            // Set each field in the struct\n                            parsed.push.apply(parsed, toConsumableArray(parseUniforms(uniform, name)));\n                        }\n        // TODO: support other non-float types? (int, etc.)\n    }\n    return parsed;\n}\n\nfunction isCanvasVisible(canvas) {\n    return canvas.getBoundingClientRect().top + canvas.height > 0 && canvas.getBoundingClientRect().top < (window.innerHeight || document.documentElement.clientHeight);\n}\n\nfunction isPowerOf2(value) {\n    return (value & value - 1) === 0;\n}\n\nfunction isSafari() {\n    return (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n    );\n}\n\n\n\n\n\n\n\nfunction isDiff(a, b) {\n    if (a && b) {\n        return a.toString() !== b.toString();\n    }\n    return false;\n}\n\nfunction subscribeMixin$1(target) {\n    var listeners = new Set();\n\n    return Object.assign(target, {\n        on: function on(type, f) {\n            var listener = {};\n            listener[type] = f;\n            listeners.add(listener);\n        },\n        off: function off(type, f) {\n            if (f) {\n                var listener = {};\n                listener[type] = f;\n                listeners.delete(listener);\n            } else {\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = listeners[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var item = _step.value;\n                        var _iteratorNormalCompletion2 = true;\n                        var _didIteratorError2 = false;\n                        var _iteratorError2 = undefined;\n\n                        try {\n                            for (var _iterator2 = Object.keys(item)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                                var key = _step2.value;\n\n                                if (key === type) {\n                                    listeners.delete(item);\n                                    return;\n                                }\n                            }\n                        } catch (err) {\n                            _didIteratorError2 = true;\n                            _iteratorError2 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                    _iterator2.return();\n                                }\n                            } finally {\n                                if (_didIteratorError2) {\n                                    throw _iteratorError2;\n                                }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n        },\n        listSubscriptions: function listSubscriptions() {\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = listeners[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var item = _step3.value;\n\n                    console.log(item);\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n        },\n        subscribe: function subscribe(listener) {\n            listeners.add(listener);\n        },\n        unsubscribe: function unsubscribe(listener) {\n            listeners.delete(listener);\n        },\n        unsubscribeAll: function unsubscribeAll() {\n            listeners.clear();\n        },\n        trigger: function trigger(event) {\n            for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                data[_key - 1] = arguments[_key];\n            }\n\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n                for (var _iterator4 = listeners[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                    var listener = _step4.value;\n\n                    if (typeof listener[event] === 'function') {\n                        listener[event].apply(listener, toConsumableArray(data));\n                    }\n                }\n            } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                        _iterator4.return();\n                    }\n                } finally {\n                    if (_didIteratorError4) {\n                        throw _iteratorError4;\n                    }\n                }\n            }\n        }\n    });\n}\n\n// Texture management\nvar Texture = function () {\n    function Texture(gl, name) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        classCallCheck(this, Texture);\n\n        subscribeMixin$1(this);\n\n        this.gl = gl;\n        this.texture = gl.createTexture();\n        if (this.texture) {\n            this.valid = true;\n        }\n        this.bind();\n\n        this.name = name;\n        this.source = null;\n        this.sourceType = null;\n        this.loading = null; // a Promise object to track the loading state of this texture\n\n        // Default to a 1-pixel black texture so we can safely render while we wait for an image to load\n        // See: http://stackoverflow.com/questions/19722247/webgl-wait-for-texture-to-load\n        this.setData(1, 1, new Uint8Array([0, 0, 0, 255]), { filtering: 'linear' });\n        this.setFiltering(options.filtering);\n\n        this.load(options);\n    }\n\n    // Destroy a single texture instance\n\n\n    createClass(Texture, [{\n        key: 'destroy',\n        value: function destroy() {\n            if (!this.valid) {\n                return;\n            }\n            this.gl.deleteTexture(this.texture);\n            this.texture = null;\n            delete this.data;\n            this.data = null;\n            this.valid = false;\n        }\n    }, {\n        key: 'bind',\n        value: function bind(unit) {\n            if (!this.valid) {\n                return;\n            }\n            if (typeof unit === 'number') {\n                if (Texture.activeUnit !== unit) {\n                    this.gl.activeTexture(this.gl.TEXTURE0 + unit);\n                    Texture.activeUnit = unit;\n                }\n            }\n            if (Texture.activeTexture !== this.texture) {\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n                Texture.activeTexture = this.texture;\n            }\n        }\n    }, {\n        key: 'load',\n        value: function load() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            this.loading = null;\n\n            if (typeof options.url === 'string') {\n                if (this.url === undefined || options.url !== this.url) {\n                    this.setUrl(options.url, options);\n                }\n            } else if (options.element) {\n                this.setElement(options.element, options);\n            } else if (options.data && options.width && options.height) {\n                this.setData(options.width, options.height, options.data, options);\n            }\n        }\n\n        // Sets texture from an url\n\n    }, {\n        key: 'setUrl',\n        value: function setUrl(url) {\n            var _this = this;\n\n            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            if (!this.valid) {\n                return;\n            }\n\n            this.url = url; // save URL reference (will be overwritten when element is loaded below)\n            this.source = this.url;\n            this.sourceType = 'url';\n\n            this.loading = new Promise(function (resolve, reject) {\n                var ext = url.split('.').pop().toLowerCase();\n                var isVideo = ext === 'ogv' || ext === 'webm' || ext === 'mp4';\n\n                var element = undefined;\n                if (isVideo) {\n                    element = document.createElement('video');\n                    element.autoplay = true;\n                    options.filtering = 'nearest';\n                    // element.preload = 'auto';\n                    // element.style.display = 'none';\n                    // document.body.appendChild(element);\n                } else {\n                    element = new Image();\n                }\n\n                element.onload = function () {\n                    try {\n                        _this.setElement(element, options);\n                    } catch (e) {\n                        console.log('Texture \\'' + _this.name + '\\': failed to load url: \\'' + _this.source + '\\'', e, options);\n                    }\n                    resolve(_this);\n                };\n                element.onerror = function (e) {\n                    // Warn and resolve on error\n                    console.log('Texture \\'' + _this.name + '\\': failed to load url: \\'' + _this.source + '\\'', e, options);\n                    resolve(_this);\n                };\n\n                // Safari has a bug loading data-URL elements with CORS enabled, so it must be disabled in that case\n                // https://bugs.webkit.org/show_bug.cgi?id=123978\n                if (!(isSafari() && _this.source.slice(0, 5) === 'data:')) {\n                    element.crossOrigin = 'anonymous';\n                }\n\n                element.src = _this.source;\n                if (isVideo) {\n                    _this.setElement(element, options);\n                }\n            });\n            return this.loading;\n        }\n\n        // Sets texture to a raw image buffer\n\n    }, {\n        key: 'setData',\n        value: function setData(width, height, data) {\n            var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n            this.width = width;\n            this.height = height;\n\n            this.source = data;\n            this.sourceType = 'data';\n\n            this.update(options);\n            this.setFiltering(options);\n\n            this.loading = Promise.resolve(this);\n            return this.loading;\n        }\n\n        // Sets the texture to track a element (canvas/image)\n\n    }, {\n        key: 'setElement',\n        value: function setElement(element, options) {\n            var _this2 = this;\n\n            var el = element;\n\n            // a string element is interpeted as a CSS selector\n            if (typeof element === 'string') {\n                element = document.querySelector(element);\n            }\n\n            if (element instanceof HTMLCanvasElement || element instanceof HTMLImageElement || element instanceof HTMLVideoElement) {\n                this.source = element;\n                this.sourceType = 'element';\n\n                if (element instanceof HTMLVideoElement) {\n                    element.addEventListener('canplaythrough', function () {\n                        _this2.intervalID = setInterval(function () {\n                            _this2.update(options);\n                        }, 15);\n                    }, true);\n                    element.addEventListener('ended', function () {\n                        element.currentTime = 0;\n                        element.play();\n                    }, true);\n                } else {\n                    this.update(options);\n                }\n                this.setFiltering(options);\n            } else {\n                var msg = 'the \\'element\\' parameter (`element: ' + JSON.stringify(el) + '`) must be a CSS ';\n                msg += 'selector string, or a <canvas>, <image> or <video> object';\n                console.log('Texture \\'' + this.name + '\\': ' + msg, options);\n            }\n\n            this.loading = Promise.resolve(this);\n            return this.loading;\n        }\n\n        // Uploads current image or buffer to the GPU (can be used to update animated textures on the fly)\n\n    }, {\n        key: 'update',\n        value: function update() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            if (!this.valid) {\n                return;\n            }\n\n            this.bind();\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, options.UNPACK_FLIP_Y_WEBGL === false ? false : true);\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.UNPACK_PREMULTIPLY_ALPHA_WEBGL || false);\n\n            // Image or Canvas element\n            if (this.sourceType === 'element' && (this.source instanceof HTMLCanvasElement || this.source instanceof HTMLVideoElement || this.source instanceof HTMLImageElement && this.source.complete)) {\n                if (this.source instanceof HTMLVideoElement) {\n                    this.width = this.source.videoWidth;\n                    this.height = this.source.videoHeight;\n                } else {\n                    this.width = this.source.width;\n                    this.height = this.source.height;\n                }\n                this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.source);\n            }\n            // Raw image buffer\n            else if (this.sourceType === 'data') {\n                    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.width, this.height, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, this.source);\n                }\n            this.trigger('loaded', this);\n        }\n\n        // Determines appropriate filtering mode\n\n    }, {\n        key: 'setFiltering',\n        value: function setFiltering() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            if (!this.valid) {\n                return;\n            }\n\n            this.powerOf2 = isPowerOf2(this.width) && isPowerOf2(this.height);\n            var defualtFilter = this.powerOf2 ? 'mipmap' : 'linear';\n            this.filtering = options.filtering || defualtFilter;\n\n            var gl = this.gl;\n            this.bind();\n\n            // For power-of-2 textures, the following presets are available:\n            // mipmap: linear blend from nearest mip\n            // linear: linear blend from original image (no mips)\n            // nearest: nearest pixel from original image (no mips, 'blocky' look)\n            if (this.powerOf2) {\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, options.TEXTURE_WRAP_S || options.repeat && gl.REPEAT || gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, options.TEXTURE_WRAP_T || options.repeat && gl.REPEAT || gl.CLAMP_TO_EDGE);\n\n                if (this.filtering === 'mipmap') {\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR); // TODO: use trilinear filtering by defualt instead?\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n                    gl.generateMipmap(gl.TEXTURE_2D);\n                } else if (this.filtering === 'linear') {\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n                } else if (this.filtering === 'nearest') {\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                }\n            } else {\n                // WebGL has strict requirements on non-power-of-2 textures:\n                // No mipmaps and must clamp to edge\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n                if (this.filtering === 'mipmap') {\n                    this.filtering = 'linear';\n                }\n\n                if (this.filtering === 'nearest') {\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                } else {\n                    // default to linear for non-power-of-2 textures\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n                }\n            }\n        }\n    }]);\n    return Texture;\n}();\n\n// Report max texture size for a GL context\n\n\nTexture.getMaxTextureSize = function (gl) {\n    return gl.getParameter(gl.MAX_TEXTURE_SIZE);\n};\n\n// Global set of textures, by name\nTexture.activeUnit = -1;\n\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2015 Patricio Gonzalez Vivo ( http://www.patriciogonzalezvivo.com )\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the 'Software'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar GlslCanvas = function () {\n    function GlslCanvas(canvas, contextOptions, options) {\n        var _this = this;\n\n        classCallCheck(this, GlslCanvas);\n\n        subscribeMixin$1(this);\n\n        contextOptions = contextOptions || {};\n        options = options || {};\n\n        this.width = canvas.clientWidth;\n        this.height = canvas.clientHeight;\n\n        this.canvas = canvas;\n        this.gl = undefined;\n        this.program = undefined;\n        this.textures = {};\n        this.buffers = {};\n        this.uniforms = {};\n        this.vbo = {};\n        this.isValid = false;\n\n        this.BUFFER_COUNT = 0;\n        // this.TEXTURE_COUNT = 0;\n\n        this.vertexString = contextOptions.vertexString || '\\n#ifdef GL_ES\\nprecision mediump float;\\n#endif\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texcoord;\\n\\nvarying vec2 v_texcoord;\\n\\nvoid main() {\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n    v_texcoord = a_texcoord;\\n}\\n';\n        this.fragmentString = contextOptions.fragmentString || '\\n#ifdef GL_ES\\nprecision mediump float;\\n#endif\\n\\nvarying vec2 v_texcoord;\\n\\nvoid main(){\\n    gl_FragColor = vec4(0.0);\\n}\\n';\n\n        // GL Context\n        var gl = setupWebGL(canvas, contextOptions, options.onError);\n        if (!gl) {\n            return;\n        }\n        this.gl = gl;\n        this.timeLoad = this.timePrev = performance.now();\n        this.timeDelta = 0.0;\n        this.forceRender = true;\n        this.paused = false;\n        this.realToCSSPixels = window.devicePixelRatio || 1;\n\n        // Allow alpha\n        canvas.style.backgroundColor = contextOptions.backgroundColor || 'rgba(1,1,1,0)';\n\n        // Load shader\n        if (canvas.hasAttribute('data-fragment')) {\n            this.fragmentString = canvas.getAttribute('data-fragment');\n        } else if (canvas.hasAttribute('data-fragment-url')) {\n            var source = canvas.getAttribute('data-fragment-url');\n            xhr__WEBPACK_IMPORTED_MODULE_0___default.a.get(source, function (error, response, body) {\n                _this.load(body, _this.vertexString);\n            });\n        }\n\n        // Load shader\n        if (canvas.hasAttribute('data-vertex')) {\n            this.vertexString = canvas.getAttribute('data-vertex');\n        } else if (canvas.hasAttribute('data-vertex-url')) {\n            var _source = canvas.getAttribute('data-vertex-url');\n            xhr__WEBPACK_IMPORTED_MODULE_0___default.a.get(_source, function (error, response, body) {\n                _this.load(_this.fragmentString, body);\n            });\n        }\n\n        this.load();\n\n        if (!this.program) {\n            return;\n        }\n\n        // Define Vertex buffer\n        var texCoordsLoc = gl.getAttribLocation(this.program, 'a_texcoord');\n        this.vbo.texCoords = gl.createBuffer();\n        this.gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo.texCoords);\n        this.gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n        this.gl.enableVertexAttribArray(texCoordsLoc);\n        this.gl.vertexAttribPointer(texCoordsLoc, 2, gl.FLOAT, false, 0, 0);\n\n        var verticesLoc = gl.getAttribLocation(this.program, 'a_position');\n        this.vbo.vertices = gl.createBuffer();\n        this.gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo.vertices);\n        this.gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0]), gl.STATIC_DRAW);\n        this.gl.enableVertexAttribArray(verticesLoc);\n        this.gl.vertexAttribPointer(verticesLoc, 2, gl.FLOAT, false, 0, 0);\n\n        // load TEXTURES\n        if (canvas.hasAttribute('data-textures')) {\n            var imgList = canvas.getAttribute('data-textures').split(',');\n            for (var nImg in imgList) {\n                this.setUniform('u_tex' + nImg, imgList[nImg]);\n            }\n        }\n\n        // ========================== EVENTS\n        var mouse = {\n            x: 0,\n            y: 0\n        };\n        document.addEventListener('mousemove', function (e) {\n            mouse.x = e.clientX || e.pageX;\n            mouse.y = e.clientY || e.pageY;\n        }, false);\n\n        var sandbox = this;\n        function RenderLoop() {\n            if (sandbox.nMouse > 1) {\n                sandbox.setMouse(mouse);\n            }\n\n            if (sandbox.resize()) {\n                sandbox.forceRender = true;\n            }\n\n            sandbox.render();\n            window.requestAnimationFrame(RenderLoop);\n        }\n\n        // Start\n        this.setMouse({ x: 0, y: 0 });\n        RenderLoop();\n        return this;\n    }\n\n    createClass(GlslCanvas, [{\n        key: 'destroy',\n        value: function destroy() {\n            this.animated = false;\n            this.isValid = false;\n            for (var tex in this.textures) {\n                if (tex.destroy) {\n                    tex.destroy();\n                }\n            }\n            this.textures = {};\n            for (var att in this.attribs) {\n                this.gl.deleteBuffer(this.attribs[att]);\n            }\n            this.gl.useProgram(null);\n            this.gl.deleteProgram(this.program);\n            for (var key in this.buffers) {\n                var buffer = this.buffers[key];\n                this.gl.deleteProgram(buffer.program);\n            }\n            this.program = null;\n            this.gl = null;\n        }\n    }, {\n        key: 'load',\n        value: function load(fragString, vertString) {\n\n            // Load vertex shader if there is one\n            if (vertString) {\n                this.vertexString = vertString;\n            }\n\n            // Load fragment shader if there is one\n            if (fragString) {\n                this.fragmentString = fragString;\n            }\n\n            this.animated = false;\n            this.nDelta = (this.fragmentString.match(/u_delta/g) || []).length;\n            this.nTime = (this.fragmentString.match(/u_time/g) || []).length;\n            this.nDate = (this.fragmentString.match(/u_date/g) || []).length;\n            this.nMouse = (this.fragmentString.match(/u_mouse/g) || []).length;\n            this.animated = this.nDate > 1 || this.nTime > 1 || this.nMouse > 1;\n\n            var nTextures = this.fragmentString.search(/sampler2D/g);\n            if (nTextures) {\n                var lines = this.fragmentString.split('\\n');\n                for (var i = 0; i < lines.length; i++) {\n                    var match = lines[i].match(/uniform\\s*sampler2D\\s*([\\w]*);\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_]*)/i);\n                    if (match) {\n                        var ext = match[2].split('.').pop().toLowerCase();\n                        if (match[1] && match[2] && (ext === 'jpg' || ext === 'jpeg' || ext === 'png' || ext === 'ogv' || ext === 'webm' || ext === 'mp4')) {\n                            this.setUniform(match[1], match[2]);\n                        }\n                    }\n                    var main = lines[i].match(/\\s*void\\s*main\\s*/g);\n                    if (main) {\n                        break;\n                    }\n                }\n            }\n\n            var vertexShader = createShader(this, this.vertexString, this.gl.VERTEX_SHADER);\n            var fragmentShader = createShader(this, this.fragmentString, this.gl.FRAGMENT_SHADER);\n\n            // If Fragment shader fails load a empty one to sign the error\n            if (!fragmentShader) {\n                fragmentShader = createShader(this, 'void main(){\\n\\tgl_FragColor = vec4(1.0);\\n}', this.gl.FRAGMENT_SHADER);\n                this.isValid = false;\n            } else {\n                this.isValid = true;\n            }\n\n            // Create and use program\n            var program = createProgram(this, [vertexShader, fragmentShader]); //, [0,1],['a_texcoord','a_position']);\n            this.gl.useProgram(program);\n\n            // Delete shaders\n            // this.gl.detachShader(program, vertexShader);\n            // this.gl.detachShader(program, fragmentShader);\n            this.gl.deleteShader(vertexShader);\n            this.gl.deleteShader(fragmentShader);\n\n            this.program = program;\n            this.change = true;\n\n            this.BUFFER_COUNT = 0;\n            var buffers = this.getBuffers(this.fragmentString);\n            if (Object.keys(buffers).length) {\n                this.loadPrograms(buffers);\n            }\n            this.buffers = buffers;\n            this.texureIndex = this.BUFFER_COUNT;\n\n            // Trigger event\n            this.trigger('load', {});\n\n            this.forceRender = true;\n            this.render();\n        }\n    }, {\n        key: 'test',\n        value: function test(callback, fragString, vertString) {\n            // Thanks to @thespite for the help here\n            // https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query/\n            var pre_test_vert = this.vertexString;\n            var pre_test_frag = this.fragmentString;\n            var pre_test_paused = this.paused;\n\n            var ext = this.gl.getExtension('EXT_disjoint_timer_query');\n            var query = ext.createQueryEXT();\n            var wasValid = this.isValid;\n\n            if (fragString || vertString) {\n                this.load(fragString, vertString);\n                wasValid = this.isValid;\n                this.forceRender = true;\n                this.render();\n            }\n\n            this.paused = true;\n            ext.beginQueryEXT(ext.TIME_ELAPSED_EXT, query);\n            this.forceRender = true;\n            this.render();\n            ext.endQueryEXT(ext.TIME_ELAPSED_EXT);\n\n            var sandbox = this;\n            function finishTest() {\n                // Revert changes... go back to normal\n                sandbox.paused = pre_test_paused;\n                if (fragString || vertString) {\n                    sandbox.load(pre_test_frag, pre_test_vert);\n                }\n            }\n            function waitForTest() {\n                sandbox.forceRender = true;\n                sandbox.render();\n                var available = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_AVAILABLE_EXT);\n                var disjoint = sandbox.gl.getParameter(ext.GPU_DISJOINT_EXT);\n                if (available && !disjoint) {\n                    var ret = {\n                        wasValid: wasValid,\n                        frag: fragString || sandbox.fragmentString,\n                        vert: vertString || sandbox.vertexString,\n                        timeElapsedMs: ext.getQueryObjectEXT(query, ext.QUERY_RESULT_EXT) / 1000000.0\n                    };\n                    finishTest();\n                    callback(ret);\n                } else {\n                    window.requestAnimationFrame(waitForTest);\n                }\n            }\n            waitForTest();\n        }\n    }, {\n        key: 'loadTexture',\n        value: function loadTexture(name, urlElementOrData, options) {\n            var _this2 = this;\n\n            if (!options) {\n                options = {};\n            }\n\n            if (typeof urlElementOrData === 'string') {\n                options.url = urlElementOrData;\n            } else if ((typeof urlElementOrData === 'undefined' ? 'undefined' : _typeof(urlElementOrData)) === 'object' && urlElementOrData.data && urlElementOrData.width && urlElementOrData.height) {\n                options.data = urlElementOrData.data;\n                options.width = urlElementOrData.width;\n                options.height = urlElementOrData.height;\n            } else if ((typeof urlElementOrData === 'undefined' ? 'undefined' : _typeof(urlElementOrData)) === 'object') {\n                options.element = urlElementOrData;\n            }\n\n            if (this.textures[name]) {\n                if (this.textures[name]) {\n                    this.textures[name].load(options);\n                    this.textures[name].on('loaded', function (args) {\n                        _this2.forceRender = true;\n                    });\n                }\n            } else {\n                this.textures[name] = new Texture(this.gl, name, options);\n                this.textures[name].on('loaded', function (args) {\n                    _this2.forceRender = true;\n                });\n            }\n        }\n    }, {\n        key: 'refreshUniforms',\n        value: function refreshUniforms() {\n            this.uniforms = {};\n        }\n    }, {\n        key: 'setUniform',\n        value: function setUniform(name) {\n            var u = {};\n\n            for (var _len = arguments.length, value = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                value[_key - 1] = arguments[_key];\n            }\n\n            u[name] = value;\n            this.setUniforms(u);\n        }\n    }, {\n        key: 'setUniforms',\n        value: function setUniforms(uniforms) {\n            var parsed = parseUniforms(uniforms);\n            // Set each uniform\n            for (var u in parsed) {\n                if (parsed[u].type === 'sampler2D') {\n                    // For textures, we need to track texture units, so we have a special setter\n                    // this.uniformTexture(parsed[u].name, parsed[u].value[0]);\n                    this.loadTexture(parsed[u].name, parsed[u].value[0]);\n                } else {\n                    this.uniform(parsed[u].method, parsed[u].type, parsed[u].name, parsed[u].value);\n                }\n            }\n            this.forceRender = true;\n        }\n    }, {\n        key: 'setMouse',\n        value: function setMouse(mouse) {\n            // set the mouse uniform\n            var rect = this.canvas.getBoundingClientRect();\n            if (mouse && mouse.x && mouse.x >= rect.left && mouse.x <= rect.right && mouse.y && mouse.y >= rect.top && mouse.y <= rect.bottom) {\n\n                var mouse_x = (mouse.x - rect.left) * this.realToCSSPixels;\n                var mouse_y = this.canvas.height - (mouse.y - rect.top) * this.realToCSSPixels;\n\n                this.uniform('2f', 'vec2', 'u_mouse', mouse_x, mouse_y);\n            }\n        }\n\n        // ex: program.uniform('3f', 'position', x, y, z);\n\n    }, {\n        key: 'uniform',\n        value: function uniform(method, type, name) {\n            // 'value' is a method-appropriate arguments list\n            this.uniforms[name] = this.uniforms[name] || {};\n            var uniform = this.uniforms[name];\n\n            for (var _len2 = arguments.length, value = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n                value[_key2 - 3] = arguments[_key2];\n            }\n\n            var change = isDiff(uniform.value, value);\n\n            // remember and keep track of uniforms location to save calls\n            if (change || this.change || !uniform.location || !uniform.value) {\n                uniform.name = name;\n                uniform.type = type;\n                uniform.value = value;\n                uniform.method = 'uniform' + method;\n                this.gl.useProgram(this.program);\n                uniform.location = this.gl.getUniformLocation(this.program, name);\n                this.gl[uniform.method].apply(this.gl, [uniform.location].concat(uniform.value));\n                // If there is change update and there is buffer update manually one by one\n                for (var key in this.buffers) {\n                    var buffer = this.buffers[key];\n                    this.gl.useProgram(buffer.program);\n                    var location = this.gl.getUniformLocation(buffer.program, name);\n                    this.gl[uniform.method].apply(this.gl, [location].concat(uniform.value));\n                }\n            }\n        }\n    }, {\n        key: 'uniformTexture',\n        value: function uniformTexture(name, texture, options) {\n            if (this.textures[name] === undefined) {\n                this.loadTexture(name, texture, options);\n            } else {\n                this.uniform('1i', 'sampler2D', name, this.texureIndex);\n\n                for (var key in this.buffers) {\n                    var buffer = this.buffers[key];\n                    this.gl.useProgram(buffer.program);\n                    this.gl.activeTexture(this.gl.TEXTURE0 + this.texureIndex);\n                    this.gl.bindTexture(this.gl.TEXTURE_2D, this.textures[name].texture);\n                }\n                this.gl.useProgram(this.program);\n                this.gl.activeTexture(this.gl.TEXTURE0 + this.texureIndex);\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this.textures[name].texture);\n                this.uniform('2f', 'vec2', name + 'Resolution', this.textures[name].width, this.textures[name].height);\n            }\n        }\n    }, {\n        key: 'resize',\n        value: function resize() {\n            if (this.width !== this.canvas.clientWidth || this.height !== this.canvas.clientHeight) {\n                this.realToCSSPixels = window.devicePixelRatio || 1;\n\n                // Lookup the size the browser is displaying the canvas in CSS pixels\n                // and compute a size needed to make our drawingbuffer match it in\n                // device pixels.\n                var displayWidth = Math.floor(this.gl.canvas.clientWidth * this.realToCSSPixels);\n                var displayHeight = Math.floor(this.gl.canvas.clientHeight * this.realToCSSPixels);\n\n                // Check if the canvas is not the same size.\n                if (this.gl.canvas.width !== displayWidth || this.gl.canvas.height !== displayHeight) {\n                    // Make the canvas the same size\n                    this.gl.canvas.width = displayWidth;\n                    this.gl.canvas.height = displayHeight;\n                    // Set the viewport to match\n                    this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n                }\n                this.width = this.canvas.clientWidth;\n                this.height = this.canvas.clientHeight;\n                this.resizeSwappableBuffers();\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            this.visible = isCanvasVisible(this.canvas);\n            if (this.forceRender || this.change || this.animated && this.visible && !this.paused) {\n\n                // Update Uniforms when are need\n                var date = new Date();\n                var now = performance.now();\n                this.timeDelta = (now - this.timePrev) / 1000.0;\n                this.timePrev = now;\n                if (this.nDelta > 1) {\n                    // set the delta time uniform\n                    this.uniform('1f', 'float', 'u_delta', this.timeDelta);\n                }\n\n                if (this.nTime > 1) {\n                    // set the elapsed time uniform\n                    this.uniform('1f', 'float', 'u_time', (now - this.timeLoad) / 1000.0);\n                }\n\n                if (this.nDate) {\n                    // Set date uniform: year/month/day/time_in_sec\n                    this.uniform('4f', 'float', 'u_date', date.getFullYear(), date.getMonth(), date.getDate(), date.getHours() * 3600 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() * 0.001);\n                }\n\n                // set the resolution uniform\n                this.uniform('2f', 'vec2', 'u_resolution', this.canvas.width, this.canvas.height);\n\n                for (var key in this.buffers) {\n                    var buffer = this.buffers[key];\n                    this.uniform('1i', 'sampler2D', buffer.name, buffer.bundle.input.index);\n                }\n\n                this.texureIndex = this.BUFFER_COUNT;\n                for (var tex in this.textures) {\n                    this.uniformTexture(tex);\n                    this.texureIndex++;\n                }\n\n                this.renderPrograms();\n\n                // Trigger event\n                this.trigger('render', {});\n                this.change = false;\n                this.forceRender = false;\n            }\n        }\n    }, {\n        key: 'pause',\n        value: function pause() {\n            this.paused = true;\n        }\n    }, {\n        key: 'play',\n        value: function play() {\n            this.paused = false;\n        }\n\n        // render main and buffers programs\n\n    }, {\n        key: 'renderPrograms',\n        value: function renderPrograms() {\n            var gl = this.gl;\n            var W = gl.canvas.width;\n            var H = gl.canvas.height;\n\n            gl.viewport(0, 0, W, H);\n\n            for (var key in this.buffers) {\n                var buffer = this.buffers[key];\n                buffer.bundle.render(W, H, buffer.program, buffer.name);\n                gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            }\n\n            gl.useProgram(this.program);\n            gl.drawArrays(gl.TRIANGLES, 0, 6);\n        }\n\n        // parse input strings\n\n    }, {\n        key: 'getBuffers',\n        value: function getBuffers(fragString) {\n            var buffers = {};\n            if (fragString) {\n                fragString.replace(/(?:^\\s*)((?:#if|#elif)(?:\\s*)(defined\\s*\\(\\s*BUFFER_)(\\d+)(?:\\s*\\))|(?:#ifdef)(?:\\s*BUFFER_)(\\d+)(?:\\s*))/gm, function () {\n                    var i = arguments[3] || arguments[4];\n                    buffers['u_buffer' + i] = {\n                        fragment: '#define BUFFER_' + i + '\\n' + fragString\n                    };\n                });\n            }\n            return buffers;\n        }\n\n        // load buffers programs\n\n    }, {\n        key: 'loadPrograms',\n        value: function loadPrograms(buffers) {\n            var glsl = this;\n            var gl = this.gl;\n            var vertex = createShader(glsl, glsl.vertexString, gl.VERTEX_SHADER);\n            for (var key in buffers) {\n                var buffer = buffers[key];\n                var fragment = createShader(glsl, buffer.fragment, gl.FRAGMENT_SHADER, 1);\n                if (!fragment) {\n                    fragment = createShader(glsl, 'void main(){\\n\\tgl_FragColor = vec4(1.0);\\n}', gl.FRAGMENT_SHADER);\n                    glsl.isValid = false;\n                } else {\n                    glsl.isValid = true;\n                }\n                var program = createProgram(glsl, [vertex, fragment]);\n                buffer.name = key;\n                buffer.program = program;\n                buffer.bundle = glsl.createSwappableBuffer(glsl.canvas.width, glsl.canvas.height, program);\n                gl.deleteShader(fragment);\n            }\n            gl.deleteShader(vertex);\n        }\n\n        // create an input / output swappable buffer\n\n    }, {\n        key: 'createSwappableBuffer',\n        value: function createSwappableBuffer(W, H, program) {\n            var input = this.createBuffer(W, H, program);\n            var output = this.createBuffer(W, H, program);\n            var gl = this.gl;\n            return {\n                input: input,\n                output: output,\n                swap: function swap() {\n                    var temp = input;\n                    input = output;\n                    output = temp;\n                    this.input = input;\n                    this.output = output;\n                },\n                render: function render(W, H, program, name) {\n                    gl.useProgram(program);\n                    gl.viewport(0, 0, W, H);\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, this.input.buffer);\n                    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.output.texture, 0);\n                    gl.drawArrays(gl.TRIANGLES, 0, 6);\n                    this.swap();\n                },\n                resize: function resize(W, H, program, name) {\n                    gl.useProgram(program);\n                    gl.viewport(0, 0, W, H);\n                    this.input.resize(W, H);\n                    this.output.resize(W, H);\n                }\n            };\n        }\n\n        // create a buffers\n\n    }, {\n        key: 'createBuffer',\n        value: function createBuffer(W, H, program) {\n            var gl = this.gl;\n            var index = this.BUFFER_COUNT;\n            this.BUFFER_COUNT += 2;\n            gl.getExtension('OES_texture_float');\n            var texture = gl.createTexture();\n            gl.activeTexture(gl.TEXTURE0 + index);\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, W, H, 0, gl.RGBA, gl.FLOAT, null);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            var buffer = gl.createFramebuffer();\n            return {\n                index: index,\n                texture: texture,\n                buffer: buffer,\n                W: W,\n                H: H,\n                resize: function resize(W, H) {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\n                    var minW = Math.min(W, this.W);\n                    var minH = Math.min(H, this.H);\n                    var pixels = new Float32Array(minW * minH * 4);\n                    gl.readPixels(0, 0, minW, minH, gl.RGBA, gl.FLOAT, pixels);\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n                    var newIndex = index + 1;\n                    var newTexture = gl.createTexture();\n                    gl.activeTexture(gl.TEXTURE0 + newIndex);\n                    gl.bindTexture(gl.TEXTURE_2D, newTexture);\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, W, H, 0, gl.RGBA, gl.FLOAT, null);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, minW, minH, gl.RGBA, gl.FLOAT, pixels);\n                    var newBuffer = gl.createFramebuffer();\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n                    gl.deleteTexture(texture);\n                    gl.activeTexture(gl.TEXTURE0 + index);\n                    gl.bindTexture(gl.TEXTURE_2D, newTexture);\n                    index = this.index = index;\n                    texture = this.texture = newTexture;\n                    buffer = this.buffer = newBuffer;\n                    this.W = W;\n                    this.H = H;\n                }\n            };\n        }\n\n        // resize buffers on canvas resize\n        // consider applying a throttle of 50 ms on canvas resize\n        // to avoid requestAnimationFrame and Gl violations\n\n    }, {\n        key: 'resizeSwappableBuffers',\n        value: function resizeSwappableBuffers() {\n            var gl = this.gl;\n            var W = gl.canvas.width,\n                H = gl.canvas.height;\n            gl.viewport(0, 0, W, H);\n            for (var key in this.buffers) {\n                var buffer = this.buffers[key];\n                buffer.bundle.resize(W, H, buffer.program, buffer.name);\n            }\n            gl.useProgram(this.program);\n        }\n    }, {\n        key: 'version',\n        value: function version() {\n            return '0.1.7';\n        }\n    }]);\n    return GlslCanvas;\n}();\n\nfunction loadAllGlslCanvas() {\n    var list = document.getElementsByClassName('glslCanvas');\n    if (list.length > 0) {\n        window.glslCanvases = [];\n        for (var i = 0; i < list.length; i++) {\n            var sandbox = new GlslCanvas(list[i]);\n            if (sandbox.isValid) {\n                window.glslCanvases.push(sandbox);\n            }\n        }\n    }\n}\n\nwindow.addEventListener('load', function () {\n    loadAllGlslCanvas();\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GlslCanvas);\n\n\n//# sourceURL=webpack:///./node_modules/glslCanvas/dist/GlslCanvas.es.js?");

/***/ }),

/***/ "./node_modules/is-function/index.js":
/*!*******************************************!*\
  !*** ./node_modules/is-function/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n//# sourceURL=webpack:///./node_modules/is-function/index.js?");

/***/ }),

/***/ "./node_modules/parse-headers/parse-headers.js":
/*!*****************************************************!*\
  !*** ./node_modules/parse-headers/parse-headers.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var trim = function(string) {\n  return string.replace(/^\\s+|\\s+$/g, '');\n}\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  var headersArr = trim(headers).split('\\n')\n\n  for (var i = 0; i < headersArr.length; i++) {\n    var row = headersArr[i]\n    var index = row.indexOf(':')\n    , key = trim(row.slice(0, index)).toLowerCase()\n    , value = trim(row.slice(index + 1))\n\n    if (typeof(result[key]) === 'undefined') {\n      result[key] = value\n    } else if (isArray(result[key])) {\n      result[key].push(value)\n    } else {\n      result[key] = [ result[key], value ]\n    }\n  }\n\n  return result\n}\n\n\n//# sourceURL=webpack:///./node_modules/parse-headers/parse-headers.js?");

/***/ }),

/***/ "./node_modules/tiny-emitter/index.js":
/*!********************************************!*\
  !*** ./node_modules/tiny-emitter/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n\n\n//# sourceURL=webpack:///./node_modules/tiny-emitter/index.js?");

/***/ }),

/***/ "./node_modules/tiny-emitter/instance.js":
/*!***********************************************!*\
  !*** ./node_modules/tiny-emitter/instance.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var E = __webpack_require__(/*! ./index.js */ \"./node_modules/tiny-emitter/index.js\");\nmodule.exports = new E();\n\n\n//# sourceURL=webpack:///./node_modules/tiny-emitter/instance.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/xhr/index.js":
/*!***********************************!*\
  !*** ./node_modules/xhr/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar window = __webpack_require__(/*! global/window */ \"./node_modules/global/window.js\")\nvar isFunction = __webpack_require__(/*! is-function */ \"./node_modules/is-function/index.js\")\nvar parseHeaders = __webpack_require__(/*! parse-headers */ \"./node_modules/parse-headers/parse-headers.js\")\nvar xtend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\")\n\nmodule.exports = createXHR\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n    try {\n        if (xhr.responseType === \"document\") {\n            return xhr.responseXML\n        }\n        var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n        if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n            return xhr.responseXML\n        }\n    } catch (e) {}\n\n    return null\n}\n\nfunction noop() {}\n\n\n//# sourceURL=webpack:///./node_modules/xhr/index.js?");

/***/ }),

/***/ "./node_modules/xtend/immutable.js":
/*!*****************************************!*\
  !*** ./node_modules/xtend/immutable.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n//# sourceURL=webpack:///./node_modules/xtend/immutable.js?");

/***/ }),

/***/ "./src/assets/bg.frag":
/*!****************************!*\
  !*** ./src/assets/bg.frag ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#ifdef GL_ES\\nprecision mediump float;\\n#define GLSLIFY 1\\n#endif\\n\\n// color mode conversions\\nvec3 rgb2hsv(vec3 c) {\\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\\n\\n    float d = q.x - min(q.w, q.y);\\n    float e = 1.0e-10;\\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nfloat map (float val, float l1, float h1, float l2, float h2) {\\n    return l2 + (h2 - l2) * ((val - l1) / (l2 - l1));\\n}\\n\\n// noise\\nfloat rand(vec2 n) {\\n\\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\\n}\\nfloat noise(vec2 p){\\n\\tvec2 ip = floor(p);\\n\\tvec2 u = fract(p);\\n\\tu = u*u*(3.0-2.0*u);\\n\\n\\tfloat res = mix(\\n\\t\\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\\n\\t\\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\\n\\treturn res*res;\\n}\\n\\n// uniforms\\nuniform vec2 u_resolution;\\nuniform float u_time;\\nuniform float u_fadein;\\nuniform bool reverse;\\n\\n// varying\\nvarying vec2 v_texcoord;\\n\\n// colors\\nvec3 c1;\\nvec3 c2;\\nvec4 c3;\\nvec4 c4;\\n// other variables\\nfloat ratio;\\n\\n// main shader code\\nvoid main() {\\n    c1 = hsv2rgb(vec3(32.0/360.0, 0.85, 1.0));\\n    c2 = hsv2rgb(vec3(155.0/360.0, 0.41, 1.0));\\n\\n    c3 = vec4(hsv2rgb(vec3(29.0/360.0, 0.43, 1.0)), 0.3);\\n    c4 = vec4(hsv2rgb(vec3(0.0, 0.77, 0.5)), 0.05);\\n    ratio = float(u_resolution.x) / float(u_resolution.y);\\n\\n    // map to [0, 1]\\n    // vec2 st = v_texcoord / 2.0 + 0.5;\\n    vec2 st = v_texcoord;\\n    // stretch to aspect ratio\\n    st.x *= ratio;\\n    vec4 outColor = vec4(0.0, 0.0, 0.0, 0.0);\\n    int h = 0;\\n\\n    // halo #1\\n    float halo1 = 1.0 - clamp(distance(vec2(0.0, 0.0), st) * 2.0, 0.0, 1.0);\\n    outColor += vec4(c1*pow(halo1, 2.0), halo1/map(cos(u_time/2.0), -1.0, 1.0, 1.0, 4.0));\\n    // halo #2\\n    float halo2 = 1.0 - clamp(distance(vec2(ratio, sin(u_time) / 2.0 + 0.5), st) * 1.5, 0.0, 1.0);\\n    outColor += vec4(c2*pow(halo2, 2.0), halo2/map(cos(u_time), -1.0, 1.0, 0.9, 2.0));\\n    // global gradient\\n    float lingrad = (st.x + (1.0 - st.y)) / (1.0 + ratio);\\n    outColor += mix(vec4(c3.rgb*c3.a, c3.a*2.0), vec4(c4.rgb*c3.a, c4.a*2.0), lingrad); // more like leningrad haha am i right fellas\\n\\n    // pixelated overlay\\n    float size = 40.0;\\n    vec2 pq;\\n    vec2 cr = vec2(floor(u_resolution.x / size), floor(u_resolution.y / size));\\n    vec2 wh = vec2(ratio, 1.0) / cr;\\n    pq = wh * floor(st / wh);\\n    pq.x /= ratio;\\n\\n    // crossing lines\\n    float dir = mod(pq.y, 0.2) > 0.1 ? 1.0 : -1.0;\\n    float px = mod(pq.x - (dir*mod(pq.y, 0.1)/2.0) + (dir*u_time/(sin(pq.y*3000.0)+3.0)) - (dir*pq.y*2.0), 1.0);\\n    outColor.rgb *= px;\\n\\n    // noise veil\\n    float a = 4.0;\\n    outColor.rgb *= pow(noise((st + (floor(u_time * 10.0) / 10.0))*1000.0), 0.8) / a + ((a-1.)/a);\\n\\n    // exports\\n    outColor.rgb *= u_fadein;\\n    gl_FragColor = outColor;\\n}\");\n\n//# sourceURL=webpack:///./src/assets/bg.frag?");

/***/ }),

/***/ "./src/assets/bg.vert":
/*!****************************!*\
  !*** ./src/assets/bg.vert ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#ifdef GL_ES\\nprecision mediump float;\\n#define GLSLIFY 1\\n#endif\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texcoord;\\n\\nvarying vec2 v_texcoord;\\n\\nvoid main() {\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n    v_texcoord = a_texcoord;\\n}\");\n\n//# sourceURL=webpack:///./src/assets/bg.vert?");

/***/ }),

/***/ "./src/js/AutoTitle.js":
/*!*****************************!*\
  !*** ./src/js/AutoTitle.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar AutoTitle = /*#__PURE__*/function () {\n  function AutoTitle() {\n    _classCallCheck(this, AutoTitle);\n\n    this.i = 0;\n    this.len = 10;\n    this.startTime = new Date();\n    this.update();\n  }\n\n  _createClass(AutoTitle, [{\n    key: \"update\",\n    value: function update() {\n      this.i = Math.floor((new Date() - this.startTime) / 1000 * (1000 / 190));\n      var s = \"\";\n\n      for (var i = 0; i < this.len; i++) {\n        s += Math.abs(this.i - i) % 4 !== 0 ? Math.abs(this.i - i) % 4 === 2 ? \"\\u2593\" : \"\\u2592\" : \"\\u2591\";\n      }\n\n      document.title = s;\n      requestAnimationFrame(this.update.bind(this));\n    }\n  }]);\n\n  return AutoTitle;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AutoTitle);\n\n//# sourceURL=webpack:///./src/js/AutoTitle.js?");

/***/ }),

/***/ "./src/js/Content.js":
/*!***************************!*\
  !*** ./src/js/Content.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tweens__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tweens */ \"./src/js/tweens.js\");\n/* harmony import */ var _components_Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/Button */ \"./src/js/components/Button.js\");\n/* harmony import */ var tiny_emitter_instance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tiny-emitter/instance */ \"./node_modules/tiny-emitter/instance.js\");\n/* harmony import */ var tiny_emitter_instance__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(tiny_emitter_instance__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var animejs_lib_anime_es__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! animejs/lib/anime.es */ \"./node_modules/animejs/lib/anime.es.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar Content = /*#__PURE__*/function () {\n  function Content() {\n    _classCallCheck(this, Content);\n\n    // link to DOM nodes\n    this.$el = document.querySelector('div.content');\n    this.textContent = this.$el.querySelector('.text');\n    this.title = this.textContent.querySelector('h3');\n    this.paragraph = this.textContent.querySelector(window.innerWidth <= 640 ? 'p.main-desc.mobile' : 'p.main-desc.desktop');\n    this.subParagraph = this.textContent.querySelector('p:last-of-type');\n    this.separator = this.textContent.querySelector('span.separator');\n    this.button = new _components_Button__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.$el.querySelector('a.btn'));\n    this.splitEl(this.paragraph); // create timeline\n\n    this.tl = animejs_lib_anime_es__WEBPACK_IMPORTED_MODULE_3__[\"default\"].timeline({\n      autoplay: false,\n      loop: false\n    }); // build timeline\n\n    this.buildTL();\n  }\n\n  _createClass(Content, [{\n    key: \"buildTL\",\n    value: function buildTL() {\n      var _context;\n\n      // show main title\n      this.tl.add({\n        targets: this.title,\n        duration: 800,\n        opacity: [0, 1],\n        easing: 'easeInOutQuad'\n      }, 0) // reposition entire container\n      .add({\n        targets: this.textContent,\n        duration: 1300,\n        translateY: [window.innerWidth <= 640 ? '40%' : '50%', '0%'],\n        easing: 'easeInOutCubic'\n      }) // main paragraph\n      .add({\n        targets: [this.paragraph.querySelectorAll('span'), this.subParagraph],\n        duration: 800,\n        opacity: [0, 0.85],\n        translateY: [20, 0],\n        easing: 'easeOutQuad',\n        delay: animejs_lib_anime_es__WEBPACK_IMPORTED_MODULE_3__[\"default\"].stagger(100)\n      }, '-=600') // separator\n      .add({\n        targets: this.separator,\n        duration: 700,\n        scaleX: [0, 1],\n        easing: 'easeOutCirc'\n      }, '-=500') // button\n      .add({\n        begin: (_context = this.button).display.bind(_context),\n        duration: 10\n      }, '-=500') // bgShader visibility\n      .add({\n        targets: _tweens__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        fadeIn: 1,\n        duration: 2000,\n        easing: 'linear',\n        complete: function complete() {\n          return tiny_emitter_instance__WEBPACK_IMPORTED_MODULE_2___default.a.emit(\"play-footer\");\n        }\n      }, 2000);\n    }\n  }, {\n    key: \"splitEl\",\n    value: function splitEl(el) {\n      var content = el.innerHTML;\n      var splitContent = content.split(\"<br>\");\n      el.innerHTML = \"\";\n      splitContent.forEach(function (line) {\n        var n = document.createElement(\"span\");\n        n.innerHTML = line;\n        el.appendChild(n);\n        el.innerHTML += \"<br>\";\n      });\n    }\n  }, {\n    key: \"display\",\n    value: function display() {\n      this.tl.play();\n    }\n  }]);\n\n  return Content;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Content);\n\n//# sourceURL=webpack:///./src/js/Content.js?");

/***/ }),

/***/ "./src/js/Footer.js":
/*!**************************!*\
  !*** ./src/js/Footer.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var animejs_lib_anime_es__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! animejs/lib/anime.es */ \"./node_modules/animejs/lib/anime.es.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Footer = /*#__PURE__*/function () {\n  function Footer() {\n    _classCallCheck(this, Footer);\n\n    this.$el = document.querySelector('footer');\n    this.h1 = this.$el.querySelector('h1');\n    this.borders = this.$el.querySelectorAll('.borders > span');\n    this.social = this.$el.querySelectorAll('ul.social li');\n    this.buildTL();\n  }\n\n  _createClass(Footer, [{\n    key: \"buildTL\",\n    value: function buildTL() {\n      this.tl = animejs_lib_anime_es__WEBPACK_IMPORTED_MODULE_0__[\"default\"].timeline({\n        autoplay: false,\n        loop: false\n      });\n      this.tl.add({\n        targets: this.h1.querySelectorAll('.mask > .content'),\n        translateY: ['110%', '0%'],\n        duration: 700,\n        easing: 'easeOutCirc',\n        delay: animejs_lib_anime_es__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stagger(100)\n      }).add({\n        targets: this.social,\n        opacity: [0, 1],\n        duration: 800,\n        easing: 'linear',\n        delay: animejs_lib_anime_es__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stagger(200)\n      }, '-=200');\n    }\n  }, {\n    key: \"display\",\n    value: function display() {\n      this.tl.play();\n    }\n  }]);\n\n  return Footer;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Footer);\n\n//# sourceURL=webpack:///./src/js/Footer.js?");

/***/ }),

/***/ "./src/js/Shader.js":
/*!**************************!*\
  !*** ./src/js/Shader.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var glslCanvas_dist_GlslCanvas_es__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! glslCanvas/dist/GlslCanvas.es */ \"./node_modules/glslCanvas/dist/GlslCanvas.es.js\");\n/* harmony import */ var _assets_bg_vert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../assets/bg.vert */ \"./src/assets/bg.vert\");\n/* harmony import */ var _assets_bg_frag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../assets/bg.frag */ \"./src/assets/bg.frag\");\n/* harmony import */ var _tweens__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tweens */ \"./src/js/tweens.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar Shader = /*#__PURE__*/function () {\n  function Shader() {\n    _classCallCheck(this, Shader);\n\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.setAttribute(\"data-fullscreen\", \"1\");\n    this.canvas.setAttribute(\"width\", window.innerWidth);\n    this.canvas.setAttribute(\"height\", window.innerHeight);\n    document.body.appendChild(this.canvas);\n    this.gl = new glslCanvas_dist_GlslCanvas_es__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.canvas, {\n      vertexString: _assets_bg_vert__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n      fragmentString: _assets_bg_frag__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n    }); // start RAF\n\n    this.update();\n  }\n\n  _createClass(Shader, [{\n    key: \"update\",\n    value: function update() {\n      this.gl.setUniform('u_fadein', _tweens__WEBPACK_IMPORTED_MODULE_3__[\"default\"].fadeIn);\n      requestAnimationFrame(this.update.bind(this));\n    }\n  }]);\n\n  return Shader;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Shader);\n\n//# sourceURL=webpack:///./src/js/Shader.js?");

/***/ }),

/***/ "./src/js/components/Button.js":
/*!*************************************!*\
  !*** ./src/js/components/Button.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var animejs_lib_anime_es__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! animejs/lib/anime.es */ \"./node_modules/animejs/lib/anime.es.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar Button = /*#__PURE__*/function () {\n  function Button(el) {\n    _classCallCheck(this, Button);\n\n    this.el = el;\n    this.border = null;\n    this.backdrop = null;\n    this.init();\n  }\n\n  _createClass(Button, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      this.el.classList.add(\"hidden\"); // set text in subspan\n\n      var subspan = document.createElement('span');\n      subspan.classList.add(\"subtext\");\n      subspan.innerHTML = this.el.innerHTML;\n      this.el.innerHTML = '';\n      this.el.appendChild(subspan); // add backdrop\n\n      this.backdrop = document.createElement('span');\n      this.backdrop.classList.add('backdrop');\n      this.el.appendChild(this.backdrop); // create timeline\n\n      this.tl = animejs_lib_anime_es__WEBPACK_IMPORTED_MODULE_0__[\"default\"].timeline({\n        targets: this.backdrop,\n        autoplay: false,\n        loop: false,\n        duration: 600,\n        easing: 'easeInOutCirc'\n      });\n      this.tl.add({\n        scaleX: [0, 1],\n        complete: function complete() {\n          return _this.el.classList.remove(\"hidden\");\n        }\n      }).add({\n        scaleY: [1, 0]\n      });\n    }\n  }, {\n    key: \"display\",\n    value: function display() {\n      this.tl.play();\n    }\n  }]);\n\n  return Button;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Button);\n\n//# sourceURL=webpack:///./src/js/components/Button.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var tiny_emitter_instance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-emitter/instance */ \"./node_modules/tiny-emitter/instance.js\");\n/* harmony import */ var tiny_emitter_instance__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tiny_emitter_instance__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Shader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Shader */ \"./src/js/Shader.js\");\n/* harmony import */ var _Content__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Content */ \"./src/js/Content.js\");\n/* harmony import */ var _Footer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Footer */ \"./src/js/Footer.js\");\n/* harmony import */ var _AutoTitle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AutoTitle */ \"./src/js/AutoTitle.js\");\n// const p5 = require(\"p5\");\n\n\n\n\n\nvar autoTitle = new _AutoTitle__WEBPACK_IMPORTED_MODULE_4__[\"default\"](); // browser compatibility\n\nvar isIE =\n/*@cc_on!@*/\n false || !!document.documentMode;\nwindow.addEventListener(\"load\", function () {\n  var content = new _Content__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n  var footer = new _Footer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n  var shader = isIE ? null : new _Shader__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  tiny_emitter_instance__WEBPACK_IMPORTED_MODULE_0___default.a.on(\"play-footer\", footer.display.bind(footer));\n  setTimeout(function () {\n    document.body.classList.remove('hidden');\n    content.display();\n  }, 200);\n});\n\n//# sourceURL=webpack:///./src/js/index.js?");

/***/ }),

/***/ "./src/js/tweens.js":
/*!**************************!*\
  !*** ./src/js/tweens.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// global tween values spread to a few places in the app\nvar tweens = {\n  fadeIn: 0\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (tweens);\n\n//# sourceURL=webpack:///./src/js/tweens.js?");

/***/ })

/******/ });